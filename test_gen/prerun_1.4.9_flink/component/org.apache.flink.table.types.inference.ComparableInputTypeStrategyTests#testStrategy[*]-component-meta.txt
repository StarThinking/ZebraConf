msx-listener INFO: file existed /root/ZebraConf/runner/shared/test_results/org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy
msx-listener INFO: nameRemovePara = org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy
msx-listener INFO: write result to file /root/ZebraConf/runner/shared/test_results/org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy
msx-listener INFO: writeFile, the original testName is org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[0: Numeric types are comparable]
msx-listener INFO: writeFile, the original testName is org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[10: Comparable multisets of distinct types]
msx-listener INFO: writeFile, the original testName is org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[11: Everything is comparable with null type]
msx-listener INFO: writeFile, the original testName is org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[12: RAW types are comparable if the originating class implements Comparable]
msx-listener INFO: writeFile, the original testName is org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[13: Comparable map of raw types]
msx-listener INFO: writeFile, the original testName is org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[14: RAW types are not comparable if the originating class does not implement Comparable]
msx-listener INFO: writeFile, the original testName is org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[15: RAW types are not comparable if the types are different]
msx-listener INFO: writeFile, the original testName is org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[16: Not fully comparable structured types]
msx-listener INFO: writeFile, the original testName is org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[17: Two different structured types are not comparable]
msx-listener INFO: writeFile, the original testName is org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[18: Two different different distinct types are not comparable even if point to the same type]
msx-listener INFO: writeFile, the original testName is org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[19: Not comparable array types]
msx-listener INFO: writeFile, the original testName is org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[1: Datetime types are comparable]
msx-listener INFO: writeFile, the original testName is org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[20: Not comparable key types in map types]
msx-listener INFO: writeFile, the original testName is org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[21: Not comparable value types in map types]
msx-listener INFO: writeFile, the original testName is org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[22: Not comparable types]
msx-listener INFO: writeFile, the original testName is org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[2: VARCHAR and CHAR types are comparable]
msx-listener INFO: writeFile, the original testName is org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[3: VARBINARY and BINARY types are comparable]
msx-listener INFO: writeFile, the original testName is org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[4: Comparable array types]
msx-listener INFO: writeFile, the original testName is org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[5: Comparable map types]
msx-listener INFO: writeFile, the original testName is org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[6: Fully comparable structured types]
msx-listener INFO: writeFile, the original testName is org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[7: Equals comparable structured types]
msx-listener INFO: writeFile, the original testName is org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[8: Comparable arrays of structured types]
msx-listener INFO: writeFile, the original testName is org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[9: Distinct types are comparable if the source type is comparable]
msx-listener all testRunFinished
msx-listener perform reset as unitTestCounterInClass 1 is larger than zero
msx-listener perform reset as unitTestCounterInClass 10 is larger than zero
msx-listener perform reset as unitTestCounterInClass 11 is larger than zero
msx-listener perform reset as unitTestCounterInClass 12 is larger than zero
msx-listener perform reset as unitTestCounterInClass 13 is larger than zero
msx-listener perform reset as unitTestCounterInClass 14 is larger than zero
msx-listener perform reset as unitTestCounterInClass 15 is larger than zero
msx-listener perform reset as unitTestCounterInClass 16 is larger than zero
msx-listener perform reset as unitTestCounterInClass 17 is larger than zero
msx-listener perform reset as unitTestCounterInClass 18 is larger than zero
msx-listener perform reset as unitTestCounterInClass 19 is larger than zero
msx-listener perform reset as unitTestCounterInClass 2 is larger than zero
msx-listener perform reset as unitTestCounterInClass 20 is larger than zero
msx-listener perform reset as unitTestCounterInClass 21 is larger than zero
msx-listener perform reset as unitTestCounterInClass 22 is larger than zero
msx-listener perform reset as unitTestCounterInClass 3 is larger than zero
msx-listener perform reset as unitTestCounterInClass 4 is larger than zero
msx-listener perform reset as unitTestCounterInClass 5 is larger than zero
msx-listener perform reset as unitTestCounterInClass 6 is larger than zero
msx-listener perform reset as unitTestCounterInClass 7 is larger than zero
msx-listener perform reset as unitTestCounterInClass 8 is larger than zero
msx-listener perform reset as unitTestCounterInClass 9 is larger than zero
msx-listener succeed
msx-listener test started org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[0: Numeric types are comparable]
msx-listener test started org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[10: Comparable multisets of distinct types]
msx-listener test started org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[11: Everything is comparable with null type]
msx-listener test started org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[12: RAW types are comparable if the originating class implements Comparable]
msx-listener test started org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[13: Comparable map of raw types]
msx-listener test started org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[14: RAW types are not comparable if the originating class does not implement Comparable]
msx-listener test started org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[15: RAW types are not comparable if the types are different]
msx-listener test started org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[16: Not fully comparable structured types]
msx-listener test started org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[17: Two different structured types are not comparable]
msx-listener test started org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[18: Two different different distinct types are not comparable even if point to the same type]
msx-listener test started org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[19: Not comparable array types]
msx-listener test started org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[1: Datetime types are comparable]
msx-listener test started org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[20: Not comparable key types in map types]
msx-listener test started org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[21: Not comparable value types in map types]
msx-listener test started org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[22: Not comparable types]
msx-listener test started org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[2: VARCHAR and CHAR types are comparable]
msx-listener test started org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[3: VARBINARY and BINARY types are comparable]
msx-listener test started org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[4: Comparable array types]
msx-listener test started org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[5: Comparable map types]
msx-listener test started org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[6: Fully comparable structured types]
msx-listener test started org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[7: Equals comparable structured types]
msx-listener test started org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[8: Comparable arrays of structured types]
msx-listener test started org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[9: Distinct types are comparable if the source type is comparable]
msx-listener testfinished org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[0: Numeric types are comparable]
msx-listener testfinished org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[10: Comparable multisets of distinct types]
msx-listener testfinished org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[11: Everything is comparable with null type]
msx-listener testfinished org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[12: RAW types are comparable if the originating class implements Comparable]
msx-listener testfinished org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[13: Comparable map of raw types]
msx-listener testfinished org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[14: RAW types are not comparable if the originating class does not implement Comparable]
msx-listener testfinished org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[15: RAW types are not comparable if the types are different]
msx-listener testfinished org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[16: Not fully comparable structured types]
msx-listener testfinished org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[17: Two different structured types are not comparable]
msx-listener testfinished org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[18: Two different different distinct types are not comparable even if point to the same type]
msx-listener testfinished org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[19: Not comparable array types]
msx-listener testfinished org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[1: Datetime types are comparable]
msx-listener testfinished org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[20: Not comparable key types in map types]
msx-listener testfinished org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[21: Not comparable value types in map types]
msx-listener testfinished org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[22: Not comparable types]
msx-listener testfinished org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[2: VARCHAR and CHAR types are comparable]
msx-listener testfinished org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[3: VARBINARY and BINARY types are comparable]
msx-listener testfinished org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[4: Comparable array types]
msx-listener testfinished org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[5: Comparable map types]
msx-listener testfinished org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[6: Fully comparable structured types]
msx-listener testfinished org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[7: Equals comparable structured types]
msx-listener testfinished org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[8: Comparable arrays of structured types]
msx-listener testfinished org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests#testStrategy[9: Distinct types are comparable if the source type is comparable]
msx-listener unitTestCounterInClass = 0
msx-output-log /root/flink-1.12.1/flink-table/flink-table-common/target/surefire-reports/org.apache.flink.table.types.inference.ComparableInputTypeStrategyTests-output.txt
msx-rc 0
