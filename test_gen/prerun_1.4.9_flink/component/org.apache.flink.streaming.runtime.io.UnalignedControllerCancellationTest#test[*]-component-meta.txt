msx-confcontroller metrics.scope.jm can be identified as reading from external conf 25536233
msx-confcontroller metrics.scope.jm.job can be identified as reading from external conf 25536233
msx-confcontroller metrics.scope.operator can be identified as reading from external conf 25536233
msx-confcontroller metrics.scope.task can be identified as reading from external conf 25536233
msx-confcontroller metrics.scope.tm can be identified as reading from external conf 25536233
msx-confcontroller metrics.scope.tm.job can be identified as reading from external conf 25536233
msx-confcontroller registerOrphanConf: add early conf 25536233 into externalConfSet
msx-confcontroller v17.0 reconf_vvmode=none, reconf_h_list=[]
msx-listener INFO: file existed /root/ZebraConf/runner/shared/test_results/org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test
msx-listener INFO: nameRemovePara = org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test
msx-listener INFO: write result to file /root/ZebraConf/runner/shared/test_results/org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test
msx-listener INFO: writeFile, the original testName is org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: false, expect abort true, numChannels: 1, chan: 0, events: [CancelCheckpointMarker 10, CancelCheckpointMarker 20]]
msx-listener INFO: writeFile, the original testName is org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: false, expect abort true, numChannels: 1, chan: 0, events: [CancelCheckpointMarker 10, CheckpointBarrier 10 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}]]
msx-listener INFO: writeFile, the original testName is org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: false, expect abort true, numChannels: 1, chan: 0, events: [CancelCheckpointMarker 20, CancelCheckpointMarker 10]]
msx-listener INFO: writeFile, the original testName is org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: false, expect abort true, numChannels: 1, chan: 0, events: [CancelCheckpointMarker 20, CheckpointBarrier 10 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}]]
msx-listener INFO: writeFile, the original testName is org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: true, expect abort false, numChannels: 1, chan: 0, events: [CheckpointBarrier 10 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}, CancelCheckpointMarker 10]]
msx-listener INFO: writeFile, the original testName is org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: true, expect abort false, numChannels: 1, chan: 0, events: [CheckpointBarrier 10 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}, CheckpointBarrier 10 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}]]
msx-listener INFO: writeFile, the original testName is org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: true, expect abort false, numChannels: 1, chan: 0, events: [CheckpointBarrier 10 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}, CheckpointBarrier 20 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}]]
msx-listener INFO: writeFile, the original testName is org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: true, expect abort false, numChannels: 1, chan: 0, events: [CheckpointBarrier 20 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}, CancelCheckpointMarker 10]]
msx-listener INFO: writeFile, the original testName is org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: true, expect abort false, numChannels: 1, chan: 0, events: [CheckpointBarrier 20 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}, CheckpointBarrier 10 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}]]
msx-listener INFO: writeFile, the original testName is org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: true, expect abort true, numChannels: 1, chan: 0, events: [CancelCheckpointMarker 10, CheckpointBarrier 20 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}]]
msx-listener INFO: writeFile, the original testName is org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: true, expect abort true, numChannels: 1, chan: 0, events: [CheckpointBarrier 10 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}, CancelCheckpointMarker 20]]
msx-listener INFO: writeFile, the original testName is org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: true, expect abort true, numChannels: 2, chan: 0, events: [CheckpointBarrier 10 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}, CancelCheckpointMarker 10]]
msx-listener INFO: writeFile, the original testName is org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: true, expect abort true, numChannels: 2, chan: 0, events: [CheckpointBarrier 10 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}, CheckpointBarrier 20 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}]]
msx-listener all testRunFinished
msx-listener perform reset as unitTestCounterInClass 1 is larger than zero
msx-listener perform reset as unitTestCounterInClass 10 is larger than zero
msx-listener perform reset as unitTestCounterInClass 11 is larger than zero
msx-listener perform reset as unitTestCounterInClass 12 is larger than zero
msx-listener perform reset as unitTestCounterInClass 2 is larger than zero
msx-listener perform reset as unitTestCounterInClass 3 is larger than zero
msx-listener perform reset as unitTestCounterInClass 4 is larger than zero
msx-listener perform reset as unitTestCounterInClass 5 is larger than zero
msx-listener perform reset as unitTestCounterInClass 6 is larger than zero
msx-listener perform reset as unitTestCounterInClass 7 is larger than zero
msx-listener perform reset as unitTestCounterInClass 8 is larger than zero
msx-listener perform reset as unitTestCounterInClass 9 is larger than zero
msx-listener succeed
msx-listener test started org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: false, expect abort true, numChannels: 1, chan: 0, events: [CancelCheckpointMarker 10, CancelCheckpointMarker 20]]
msx-listener test started org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: false, expect abort true, numChannels: 1, chan: 0, events: [CancelCheckpointMarker 10, CheckpointBarrier 10 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}]]
msx-listener test started org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: false, expect abort true, numChannels: 1, chan: 0, events: [CancelCheckpointMarker 20, CancelCheckpointMarker 10]]
msx-listener test started org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: false, expect abort true, numChannels: 1, chan: 0, events: [CancelCheckpointMarker 20, CheckpointBarrier 10 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}]]
msx-listener test started org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: true, expect abort false, numChannels: 1, chan: 0, events: [CheckpointBarrier 10 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}, CancelCheckpointMarker 10]]
msx-listener test started org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: true, expect abort false, numChannels: 1, chan: 0, events: [CheckpointBarrier 10 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}, CheckpointBarrier 10 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}]]
msx-listener test started org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: true, expect abort false, numChannels: 1, chan: 0, events: [CheckpointBarrier 10 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}, CheckpointBarrier 20 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}]]
msx-listener test started org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: true, expect abort false, numChannels: 1, chan: 0, events: [CheckpointBarrier 20 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}, CancelCheckpointMarker 10]]
msx-listener test started org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: true, expect abort false, numChannels: 1, chan: 0, events: [CheckpointBarrier 20 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}, CheckpointBarrier 10 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}]]
msx-listener test started org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: true, expect abort true, numChannels: 1, chan: 0, events: [CancelCheckpointMarker 10, CheckpointBarrier 20 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}]]
msx-listener test started org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: true, expect abort true, numChannels: 1, chan: 0, events: [CheckpointBarrier 10 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}, CancelCheckpointMarker 20]]
msx-listener test started org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: true, expect abort true, numChannels: 2, chan: 0, events: [CheckpointBarrier 10 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}, CancelCheckpointMarker 10]]
msx-listener test started org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: true, expect abort true, numChannels: 2, chan: 0, events: [CheckpointBarrier 10 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}, CheckpointBarrier 20 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}]]
msx-listener testfinished org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: false, expect abort true, numChannels: 1, chan: 0, events: [CancelCheckpointMarker 10, CancelCheckpointMarker 20]]
msx-listener testfinished org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: false, expect abort true, numChannels: 1, chan: 0, events: [CancelCheckpointMarker 10, CheckpointBarrier 10 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}]]
msx-listener testfinished org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: false, expect abort true, numChannels: 1, chan: 0, events: [CancelCheckpointMarker 20, CancelCheckpointMarker 10]]
msx-listener testfinished org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: false, expect abort true, numChannels: 1, chan: 0, events: [CancelCheckpointMarker 20, CheckpointBarrier 10 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}]]
msx-listener testfinished org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: true, expect abort false, numChannels: 1, chan: 0, events: [CheckpointBarrier 10 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}, CancelCheckpointMarker 10]]
msx-listener testfinished org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: true, expect abort false, numChannels: 1, chan: 0, events: [CheckpointBarrier 10 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}, CheckpointBarrier 10 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}]]
msx-listener testfinished org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: true, expect abort false, numChannels: 1, chan: 0, events: [CheckpointBarrier 10 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}, CheckpointBarrier 20 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}]]
msx-listener testfinished org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: true, expect abort false, numChannels: 1, chan: 0, events: [CheckpointBarrier 20 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}, CancelCheckpointMarker 10]]
msx-listener testfinished org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: true, expect abort false, numChannels: 1, chan: 0, events: [CheckpointBarrier 20 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}, CheckpointBarrier 10 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}]]
msx-listener testfinished org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: true, expect abort true, numChannels: 1, chan: 0, events: [CancelCheckpointMarker 10, CheckpointBarrier 20 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}]]
msx-listener testfinished org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: true, expect abort true, numChannels: 1, chan: 0, events: [CheckpointBarrier 10 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}, CancelCheckpointMarker 20]]
msx-listener testfinished org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: true, expect abort true, numChannels: 2, chan: 0, events: [CheckpointBarrier 10 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}, CancelCheckpointMarker 10]]
msx-listener testfinished org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest#test[expect trigger: true, expect abort true, numChannels: 2, chan: 0, events: [CheckpointBarrier 10 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}, CheckpointBarrier 20 @ 1 Options: CheckpointOptions {checkpointType = CHECKPOINT, targetLocation = (default), isExactlyOnceMode = true, isUnalignedCheckpoint = false, alignmentTimeout = 9223372036854775807}]]
msx-listener unitTestCounterInClass = 0
msx-output-log /root/flink-1.12.1/flink-streaming-java/target/surefire-reports/org.apache.flink.streaming.runtime.io.UnalignedControllerCancellationTest-output.txt
msx-rc 0
