my_type=hypothesis
proj=cassandra
u_test=materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
h_list[1]=gc_warn_threshold_in_ms@@@CassandraDaemon@@@-2@@@100@@@1000
proj: cassandra
u_test: materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
h_list: gc_warn_threshold_in_ms@@@CassandraDaemon@@@-2@@@100@@@1000
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
13:33:15,65 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
13:33:15,958 cassandra.cluster ERROR Exception refreshing schema in response to schema change:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 4206, in cassandra.cluster.refresh_schema_and_set_result
  File "cassandra/cluster.py", line 3686, in cassandra.cluster.ControlConnection._refresh_schema
  File "cassandra/cluster.py", line 3935, in cassandra.cluster.ControlConnection.wait_for_schema_agreement
  File "cassandra/cluster.py", line 3975, in cassandra.cluster.ControlConnection.wait_for_schema_agreement
  File "cassandra/cluster.py", line 3963, in cassandra.cluster.ControlConnection.wait_for_schema_agreement
  File "cassandra/connection.py", line 1076, in cassandra.connection.Connection.wait_for_responses
  File "cassandra/connection.py", line 1071, in cassandra.connection.Connection.wait_for_responses
  File "cassandra/connection.py", line 1570, in cassandra.connection.ResponseWaiter.deliver
cassandra.connection.ConnectionShutdown: [Errno 104] Connection reset by peer

-------------------------------- live log call ---------------------------------
13:34:29,534 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
FAILED                                                                   [100%]

=================================== FAILURES ===================================
_ TestMaterializedViewsConsistency.test_multi_partition_consistent_reads_after_write _

self = <materialized_views_test.TestMaterializedViewsConsistency object at 0x7f84cb5f6f28>

    def test_multi_partition_consistent_reads_after_write(self):
        """
            Tests consistency of multiple writes to a multiple partitions
    
            @jira_ticket CASSANDRA-10981
            """
>       self._consistent_reads_after_write_test(5)

materialized_views_test.py:2775: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
materialized_views_test.py:2808: in _consistent_reads_after_write_test
    ('CREATE MATERIALIZED VIEW mvtest.mv1 AS '
cassandra/cluster.py:2618: in cassandra.cluster.Session.execute
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   cassandra.OperationTimedOut: errors={'Connection defunct by heartbeat': 'Client request timeout. See Session.execute[_async](timeout)'}, last_host=127.0.0.1:9042

cassandra/cluster.py:4894: OperationTimedOut
---------------------------- Captured stdout setup -----------------------------
13:32:10,435 ccm DEBUG Log-watching thread starting.
---------------------------- Captured stderr setup -----------------------------
swapoff: Not superuser.
------------------------------ Captured log setup ------------------------------
13:32:09,72 conftest INFO Starting execution of test_multi_partition_consistent_reads_after_write at 2022-01-30 13:32:09.072480
13:32:10,333 dtest_setup INFO cluster ccm directory: /tmp/dtest-40hteli9
------------------------------ Captured log call -------------------------------
13:32:12,94 ccm INFO node1: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-40hteli9/test/node1/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-40hteli9/test/node1/conf'}
13:32:12,95 ccm INFO node1: using Java 8 for the current invocation
13:32:12,267 ccm INFO node1: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-40hteli9/test/node1/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-40hteli9/test/node1/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6'}
13:32:12,268 ccm INFO node1: using Java 8 for the current invocation
13:32:12,352 ccm INFO Starting node1 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
13:32:12,651 ccm INFO node2: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-40hteli9/test/node2/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-40hteli9/test/node2/conf'}
13:32:12,652 ccm INFO node2: using Java 8 for the current invocation
13:32:12,818 ccm INFO node2: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-40hteli9/test/node2/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-40hteli9/test/node2/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6'}
13:32:12,819 ccm INFO node2: using Java 8 for the current invocation
13:32:12,906 ccm INFO Starting node2 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
13:32:13,180 ccm INFO node3: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-40hteli9/test/node3/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-40hteli9/test/node3/conf'}
13:32:13,181 ccm INFO node3: using Java 8 for the current invocation
13:32:13,365 ccm INFO node3: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-40hteli9/test/node3/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-40hteli9/test/node3/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6'}
13:32:13,366 ccm INFO node3: using Java 8 for the current invocation
13:32:13,460 ccm INFO Starting node3 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
13:32:52,311 cassandra.cluster INFO New Cassandra host <Host: 127.0.0.3:9042 datacenter1> discovered
13:32:52,313 cassandra.cluster INFO New Cassandra host <Host: 127.0.0.1:9042 datacenter1> discovered
13:33:15,65 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
--------------------------- Captured stdout teardown ---------------------------
13:33:19,140 ccm DEBUG Log-watching thread exiting.
--------------------------- Captured stderr teardown ---------------------------
swapoff: Not superuser.
---------------------------- Captured stdout setup -----------------------------
13:33:23,615 ccm DEBUG Log-watching thread starting.
---------------------------- Captured stderr setup -----------------------------
swapoff: Not superuser.
------------------------------ Captured log setup ------------------------------
13:33:22,635 conftest INFO Starting execution of test_multi_partition_consistent_reads_after_write at 2022-01-30 13:33:22.635707
13:33:23,461 dtest_setup INFO cluster ccm directory: /tmp/dtest-_pou2l42
------------------------------ Captured log call -------------------------------
13:33:25,415 ccm INFO node1: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-_pou2l42/test/node1/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-_pou2l42/test/node1/conf'}
13:33:25,415 ccm INFO node1: using Java 8 for the current invocation
13:33:25,590 ccm INFO node1: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-_pou2l42/test/node1/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-_pou2l42/test/node1/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6'}
13:33:25,591 ccm INFO node1: using Java 8 for the current invocation
13:33:25,687 ccm INFO Starting node1 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
13:33:26,15 ccm INFO node2: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-_pou2l42/test/node2/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-_pou2l42/test/node2/conf'}
13:33:26,16 ccm INFO node2: using Java 8 for the current invocation
13:33:26,200 ccm INFO node2: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-_pou2l42/test/node2/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-_pou2l42/test/node2/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6'}
13:33:26,200 ccm INFO node2: using Java 8 for the current invocation
13:33:26,291 ccm INFO Starting node2 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
13:33:26,579 ccm INFO node3: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-_pou2l42/test/node3/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-_pou2l42/test/node3/conf'}
13:33:26,580 ccm INFO node3: using Java 8 for the current invocation
13:33:26,757 ccm INFO node3: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-_pou2l42/test/node3/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-_pou2l42/test/node3/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6'}
13:33:26,758 ccm INFO node3: using Java 8 for the current invocation
13:33:26,854 ccm INFO Starting node3 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
13:34:06,719 cassandra.cluster INFO New Cassandra host <Host: 127.0.0.3:9042 datacenter1> discovered
13:34:06,720 cassandra.cluster INFO New Cassandra host <Host: 127.0.0.1:9042 datacenter1> discovered
13:34:29,534 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
--------------------------- Captured stdout teardown ---------------------------
13:33:19,140 ccm DEBUG Log-watching thread exiting.
--------------------------- Captured stderr teardown ---------------------------
swapoff: Not superuser.
--------------------------- Captured stdout teardown ---------------------------
13:33:19,140 ccm DEBUG Log-watching thread exiting.
--------------------------- Captured stderr teardown ---------------------------
swapoff: Not superuser.
--------------------------- Captured stdout teardown ---------------------------
13:34:30,654 ccm DEBUG Log-watching thread exiting.
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write failed (1 runs remaining out of 2).
	<class 'cassandra.OperationTimedOut'>
	errors={'Connection defunct by heartbeat': 'Client request timeout. See Session.execute[_async](timeout)'}, last_host=127.0.0.1:9042
	[<TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2775>, <TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2808>, <TracebackEntry cassandra/cluster.py:2618>, <TracebackEntry cassandra/cluster.py:4894>]
test_multi_partition_consistent_reads_after_write failed; it passed 0 out of the required 1 times.
	<class 'cassandra.OperationTimedOut'>
	errors={'Connection defunct by heartbeat': 'Client request timeout. See Session.execute[_async](timeout)'}, last_host=127.0.0.1:9042
	[<TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2775>, <TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2808>, <TracebackEntry cassandra/cluster.py:2618>, <TracebackEntry cassandra/cluster.py:4894>]

===End Flaky Test Report===
========================== 1 failed in 146.39 seconds ==========================
[msx] rc = 1
v1v2 running time = 167982868903
---> v1v2 test failed.
proj: cassandra
u_test: materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
h_list: gc_warn_threshold_in_ms@@@CassandraDaemon@@@-2@@@100@@@1000
vv_mode: v1v2
result: FAIL
failureMessage: 
stackTrace: 

cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
13:35:42,693 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
13:35:58,134 cassandra.cluster WARNING Node 127.0.0.2:9042 is reporting a schema disagreement: None
13:36:18,150 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
13:36:18,151 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
13:36:18,152 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
13:36:18,153 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
13:36:18,167 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
13:36:18,168 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
13:36:18,168 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
13:36:18,169 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
13:36:18,173 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
13:36:18,174 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
13:36:18,174 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
13:36:18,177 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 265.28 seconds ==========================
[msx] rc = 0
v1v1 running time = 288791673788
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
13:40:25,60 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
13:40:39,859 cassandra.cluster WARNING Node 127.0.0.2:9042 is reporting a schema disagreement: None
13:41:01,371 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
13:41:01,373 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
13:41:01,374 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
13:41:01,375 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
13:41:01,393 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
13:41:01,394 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
13:41:01,394 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
13:41:01,394 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
13:41:01,399 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
13:41:01,399 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
13:41:01,402 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
13:41:01,404 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 262.39 seconds ==========================
[msx] rc = 0
v2v2 running time = 283809837394
---> v1v1 and v2v2 test test suceeded.
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
13:45:09,507 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.

-------------------------------- live log call ---------------------------------
13:46:07,859 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
13:46:44,44 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
13:46:44,45 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
13:46:44,46 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
13:46:44,47 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
13:46:44,63 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
13:46:44,64 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
13:46:44,64 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
13:46:44,65 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
13:46:44,69 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
13:46:44,70 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
13:46:44,70 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
13:46:44,72 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write failed (1 runs remaining out of 2).
	<class 'cassandra.OperationTimedOut'>
	errors={'Connection defunct by heartbeat': 'Client request timeout. See Session.execute[_async](timeout)'}, last_host=127.0.0.2:9042
	[<TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2775>, <TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2808>, <TracebackEntry cassandra/cluster.py:2618>, <TracebackEntry cassandra/cluster.py:4894>]
test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 320.22 seconds ==========================
[msx] rc = 0
v1v2 running time = 343662829984
---> v1v2 test suceeded.
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
13:50:56,352 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
13:51:01,334 cassandra.cluster ERROR Exception refreshing schema in response to schema change:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 4206, in cassandra.cluster.refresh_schema_and_set_result
  File "cassandra/cluster.py", line 3686, in cassandra.cluster.ControlConnection._refresh_schema
  File "cassandra/cluster.py", line 3935, in cassandra.cluster.ControlConnection.wait_for_schema_agreement
  File "cassandra/cluster.py", line 3975, in cassandra.cluster.ControlConnection.wait_for_schema_agreement
  File "cassandra/cluster.py", line 3963, in cassandra.cluster.ControlConnection.wait_for_schema_agreement
  File "cassandra/connection.py", line 1041, in cassandra.connection.Connection.wait_for_responses
cassandra.connection.ConnectionShutdown: Connection <LibevConnection(139715272313544) 127.0.0.2:9042 (defunct)> is already closed
13:51:01,336 cassandra.cluster WARNING Host 127.0.0.2:9042 has been marked down
13:51:01,341 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.1:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 831, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 267, in __init__
    self._connect_socket()
  File "cassandra/connection.py", line 898, in cassandra.connection.Connection._connect_socket
ConnectionRefusedError: [Errno 111] Tried connecting to [('127.0.0.1', 9042)]. Last error: Connection refused
13:51:01,342 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.3:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 831, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 267, in __init__
    self._connect_socket()
  File "cassandra/connection.py", line 898, in cassandra.connection.Connection._connect_socket
ConnectionRefusedError: [Errno 111] Tried connecting to [('127.0.0.3', 9042)]. Last error: Connection refused
13:51:02,445 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.3:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 831, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 267, in __init__
    self._connect_socket()
  File "cassandra/connection.py", line 898, in cassandra.connection.Connection._connect_socket
ConnectionRefusedError: [Errno 111] Tried connecting to [('127.0.0.3', 9042)]. Last error: Connection refused
13:51:02,446 cassandra.pool WARNING Error attempting to reconnect to 127.0.0.2:9042, scheduling retry in 1.82 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused
13:51:02,448 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.1:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 831, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 267, in __init__
    self._connect_socket()
  File "cassandra/connection.py", line 898, in cassandra.connection.Connection._connect_socket
ConnectionRefusedError: [Errno 111] Tried connecting to [('127.0.0.1', 9042)]. Last error: Connection refused

-------------------------------- live log call ---------------------------------
13:51:48,448 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
FAILED                                                                   [100%]

=================================== FAILURES ===================================
_ TestMaterializedViewsConsistency.test_multi_partition_consistent_reads_after_write _

self = <materialized_views_test.TestMaterializedViewsConsistency object at 0x7f11ff2c8c88>

    def test_multi_partition_consistent_reads_after_write(self):
        """
            Tests consistency of multiple writes to a multiple partitions
    
            @jira_ticket CASSANDRA-10981
            """
>       self._consistent_reads_after_write_test(5)

materialized_views_test.py:2775: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
materialized_views_test.py:2808: in _consistent_reads_after_write_test
    ('CREATE MATERIALIZED VIEW mvtest.mv1 AS '
cassandra/cluster.py:2618: in cassandra.cluster.Session.execute
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   cassandra.OperationTimedOut: errors={'Connection defunct by heartbeat': 'Client request timeout. See Session.execute[_async](timeout)'}, last_host=127.0.0.2:9042

cassandra/cluster.py:4894: OperationTimedOut
---------------------------- Captured stdout setup -----------------------------
13:50:13,983 ccm DEBUG Log-watching thread starting.
---------------------------- Captured stderr setup -----------------------------
swapoff: Not superuser.
------------------------------ Captured log setup ------------------------------
13:50:13,233 conftest INFO Starting execution of test_multi_partition_consistent_reads_after_write at 2022-01-30 13:50:13.233624
13:50:13,890 dtest_setup INFO cluster ccm directory: /tmp/dtest-oq1t_1mg
------------------------------ Captured log call -------------------------------
13:50:15,411 ccm INFO node1: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-oq1t_1mg/test/node1/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-oq1t_1mg/test/node1/conf'}
13:50:15,412 ccm INFO node1: using Java 8 for the current invocation
13:50:15,558 ccm INFO node1: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-oq1t_1mg/test/node1/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-oq1t_1mg/test/node1/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6'}
13:50:15,559 ccm INFO node1: using Java 8 for the current invocation
13:50:15,635 ccm INFO Starting node1 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
13:50:15,906 ccm INFO node2: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-oq1t_1mg/test/node2/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-oq1t_1mg/test/node2/conf'}
13:50:15,907 ccm INFO node2: using Java 8 for the current invocation
13:50:16,65 ccm INFO node2: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-oq1t_1mg/test/node2/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-oq1t_1mg/test/node2/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6'}
13:50:16,65 ccm INFO node2: using Java 8 for the current invocation
13:50:16,146 ccm INFO Starting node2 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
13:50:16,390 ccm INFO node3: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-oq1t_1mg/test/node3/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-oq1t_1mg/test/node3/conf'}
13:50:16,391 ccm INFO node3: using Java 8 for the current invocation
13:50:16,561 ccm INFO node3: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-oq1t_1mg/test/node3/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-oq1t_1mg/test/node3/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6'}
13:50:16,561 ccm INFO node3: using Java 8 for the current invocation
13:50:16,642 ccm INFO Starting node3 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
13:50:42,457 cassandra.cluster INFO New Cassandra host <Host: 127.0.0.3:9042 datacenter1> discovered
13:50:42,461 cassandra.cluster INFO New Cassandra host <Host: 127.0.0.1:9042 datacenter1> discovered
13:50:56,352 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
--------------------------- Captured stdout teardown ---------------------------
13:51:04,323 ccm DEBUG Log-watching thread exiting.
---------------------------- Captured stdout setup -----------------------------
13:51:08,443 ccm DEBUG Log-watching thread starting.
---------------------------- Captured stderr setup -----------------------------
swapoff: Not superuser.
------------------------------ Captured log setup ------------------------------
13:51:07,485 conftest INFO Starting execution of test_multi_partition_consistent_reads_after_write at 2022-01-30 13:51:07.485573
13:51:08,309 dtest_setup INFO cluster ccm directory: /tmp/dtest-5joqmjaa
------------------------------ Captured log call -------------------------------
13:51:10,128 ccm INFO node1: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-5joqmjaa/test/node1/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-5joqmjaa/test/node1/conf'}
13:51:10,130 ccm INFO node1: using Java 8 for the current invocation
13:51:10,310 ccm INFO node1: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-5joqmjaa/test/node1/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-5joqmjaa/test/node1/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6'}
13:51:10,311 ccm INFO node1: using Java 8 for the current invocation
13:51:10,395 ccm INFO Starting node1 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
13:51:10,710 ccm INFO node2: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-5joqmjaa/test/node2/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-5joqmjaa/test/node2/conf'}
13:51:10,711 ccm INFO node2: using Java 8 for the current invocation
13:51:10,894 ccm INFO node2: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-5joqmjaa/test/node2/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-5joqmjaa/test/node2/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6'}
13:51:10,894 ccm INFO node2: using Java 8 for the current invocation
13:51:10,979 ccm INFO Starting node2 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
13:51:11,260 ccm INFO node3: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-5joqmjaa/test/node3/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-5joqmjaa/test/node3/conf'}
13:51:11,261 ccm INFO node3: using Java 8 for the current invocation
13:51:11,450 ccm INFO node3: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-5joqmjaa/test/node3/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-5joqmjaa/test/node3/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6'}
13:51:11,453 ccm INFO node3: using Java 8 for the current invocation
13:51:11,537 ccm INFO Starting node3 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
13:51:35,317 cassandra.cluster INFO New Cassandra host <Host: 127.0.0.3:9042 datacenter1> discovered
13:51:35,317 cassandra.cluster INFO New Cassandra host <Host: 127.0.0.1:9042 datacenter1> discovered
13:51:48,448 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
--------------------------- Captured stdout teardown ---------------------------
13:51:04,323 ccm DEBUG Log-watching thread exiting.
--------------------------- Captured stdout teardown ---------------------------
13:51:04,323 ccm DEBUG Log-watching thread exiting.
--------------------------- Captured stdout teardown ---------------------------
13:51:55,17 ccm DEBUG Log-watching thread exiting.
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write failed (1 runs remaining out of 2).
	<class 'cassandra.OperationTimedOut'>
	errors={'Connection defunct by heartbeat': 'Client request timeout. See Session.execute[_async](timeout)'}, last_host=127.0.0.2:9042
	[<TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2775>, <TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2808>, <TracebackEntry cassandra/cluster.py:2618>, <TracebackEntry cassandra/cluster.py:4894>]
test_multi_partition_consistent_reads_after_write failed; it passed 0 out of the required 1 times.
	<class 'cassandra.OperationTimedOut'>
	errors={'Connection defunct by heartbeat': 'Client request timeout. See Session.execute[_async](timeout)'}, last_host=127.0.0.2:9042
	[<TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2775>, <TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2808>, <TracebackEntry cassandra/cluster.py:2618>, <TracebackEntry cassandra/cluster.py:4894>]

===End Flaky Test Report===
========================== 1 failed in 104.56 seconds ==========================
[msx] rc = 1
v1v1 running time = 126026233635
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
13:52:58,163 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
13:53:34,38 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
13:53:34,40 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
13:53:34,41 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
13:53:34,42 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
13:53:34,60 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
13:53:34,61 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
13:53:34,61 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
13:53:34,62 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
13:53:34,66 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
13:53:34,66 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
13:53:34,67 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
13:53:34,69 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 259.78 seconds ==========================
[msx] rc = 0
v2v2 running time = 281200579393
---> v1v1 or v2v2 test failed.
v1v1 failed in a hypo test
proj: cassandra
u_test: materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
h_list: gc_warn_threshold_in_ms@@@CassandraDaemon@@@-2@@@100@@@1000
vv_mode: v1v1
result: FAIL
failureMessage: 
stackTrace: 

cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
13:57:41,712 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
13:58:05,334 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.3:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 840, in cassandra.connection.Connection.factory
cassandra.OperationTimedOut: errors=Timed out creating connection (15 seconds), last_host=None
13:58:17,432 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
13:58:17,433 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
13:58:17,434 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
13:58:17,436 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
13:58:17,451 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
13:58:17,452 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
13:58:17,453 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
13:58:17,453 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
13:58:17,458 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
13:58:17,459 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
13:58:17,460 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
13:58:17,464 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 264.43 seconds ==========================
[msx] rc = 0
v1v2 running time = 285841242156
---> v1v2 test suceeded.
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
14:02:27,846 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
14:02:43,361 cassandra.cluster WARNING Node 127.0.0.2:9042 is reporting a schema disagreement: None
14:03:06,170 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:03:06,172 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:03:06,174 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:03:06,176 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:03:06,187 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:03:06,188 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:03:06,188 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:03:06,189 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:03:06,193 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:03:06,194 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:03:06,195 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:03:06,197 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 264.43 seconds ==========================
[msx] rc = 0
v1v1 running time = 287273813021
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
14:07:21,480 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
14:07:59,553 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:07:59,555 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:07:59,556 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:07:59,557 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:07:59,575 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:07:59,575 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:07:59,576 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:07:59,576 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:07:59,581 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:07:59,582 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:07:59,582 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:07:59,584 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 271.76 seconds ==========================
[msx] rc = 0
v2v2 running time = 295783509203
---> v1v1 and v2v2 test test suceeded.
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
14:12:13,422 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
14:12:50,278 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:12:50,279 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:12:50,280 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:12:50,282 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:12:50,295 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:12:50,296 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:12:50,296 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:12:50,296 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:12:50,300 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:12:50,301 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:12:50,303 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:12:50,304 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 260.88 seconds ==========================
[msx] rc = 0
v1v2 running time = 282230859731
---> v1v2 test suceeded.
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
14:16:49,19 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
14:17:23,988 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:17:23,990 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:17:23,991 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:17:23,992 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:17:24,10 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:17:24,10 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:17:24,11 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:17:24,11 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:17:24,15 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:17:24,17 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:17:24,19 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:17:24,22 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 259.32 seconds ==========================
[msx] rc = 0
v1v1 running time = 280802861330
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
14:21:40,352 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
14:22:16,892 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:22:16,894 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:22:16,896 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:22:16,899 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:22:16,910 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:22:16,910 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:22:16,911 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:22:16,912 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:22:16,916 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:22:16,917 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:22:16,918 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:22:16,919 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 270.78 seconds ==========================
[msx] rc = 0
v2v2 running time = 293717440883
---> v1v1 and v2v2 test test suceeded.
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
14:26:31,274 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
14:27:09,538 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:27:09,540 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:27:09,540 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:27:09,541 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:27:09,557 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:27:09,557 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:27:09,557 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:27:09,558 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:27:09,562 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:27:09,562 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:27:09,571 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:27:09,572 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 267.39 seconds ==========================
[msx] rc = 0
v1v2 running time = 288858843020
---> v1v2 test suceeded.
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
14:31:12,282 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
14:31:27,899 cassandra.cluster WARNING Node 127.0.0.2:9042 is reporting a schema disagreement: None
14:31:51,905 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:31:51,907 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:31:51,908 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:31:51,909 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:31:51,927 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:31:51,927 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:31:51,928 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:31:51,929 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:31:51,937 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:31:51,937 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:31:51,938 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:31:51,940 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 260.64 seconds ==========================
[msx] rc = 0
v1v1 running time = 282018839356
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
14:35:54,519 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
14:36:34,749 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:36:34,749 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:36:34,751 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:36:34,752 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:36:34,768 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:36:34,769 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:36:34,769 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:36:34,770 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:36:34,772 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:36:34,774 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:36:34,780 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:36:34,782 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 259.69 seconds ==========================
[msx] rc = 0
v2v2 running time = 283014501697
---> v1v1 and v2v2 test test suceeded.
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
14:40:45,86 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
14:41:20,532 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:41:20,533 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:41:20,535 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:41:20,537 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:41:20,551 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:41:20,552 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:41:20,552 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:41:20,552 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:41:20,556 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:41:20,557 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:41:20,557 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:41:20,559 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 264.30 seconds ==========================
[msx] rc = 0
v1v2 running time = 285837378668
---> v1v2 test suceeded.
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
14:45:35,695 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
14:45:50,775 cassandra.cluster WARNING Node 127.0.0.2:9042 is reporting a schema disagreement: None
14:46:11,437 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:46:11,439 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:46:11,440 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:46:11,443 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:46:11,459 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:46:11,459 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:46:11,460 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:46:11,460 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:46:11,464 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:46:11,465 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:46:11,467 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:46:11,469 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 272.94 seconds ==========================
[msx] rc = 0
v1v1 running time = 294481394702
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
14:50:20,353 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
14:50:25,553 cassandra.cluster ERROR Exception refreshing schema in response to schema change:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 4206, in cassandra.cluster.refresh_schema_and_set_result
  File "cassandra/cluster.py", line 3686, in cassandra.cluster.ControlConnection._refresh_schema
  File "cassandra/cluster.py", line 3935, in cassandra.cluster.ControlConnection.wait_for_schema_agreement
  File "cassandra/cluster.py", line 3975, in cassandra.cluster.ControlConnection.wait_for_schema_agreement
  File "cassandra/cluster.py", line 3963, in cassandra.cluster.ControlConnection.wait_for_schema_agreement
  File "cassandra/connection.py", line 1041, in cassandra.connection.Connection.wait_for_responses
cassandra.connection.ConnectionShutdown: Connection <LibevConnection(140155962737384) 127.0.0.3:9042 (defunct)> is already closed
14:50:25,601 cassandra.cluster WARNING Host 127.0.0.2:9042 has been marked down
14:50:25,602 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.3:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 831, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 267, in __init__
    self._connect_socket()
  File "cassandra/connection.py", line 898, in cassandra.connection.Connection._connect_socket
ConnectionRefusedError: [Errno 111] Tried connecting to [('127.0.0.3', 9042)]. Last error: Connection refused
14:50:25,604 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.1:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 831, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 267, in __init__
    self._connect_socket()
  File "cassandra/connection.py", line 898, in cassandra.connection.Connection._connect_socket
ConnectionRefusedError: [Errno 111] Tried connecting to [('127.0.0.1', 9042)]. Last error: Connection refused
14:50:26,661 cassandra.pool WARNING Error attempting to reconnect to 127.0.0.2:9042, scheduling retry in 1.84 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused
14:50:26,761 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.1:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 831, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 267, in __init__
    self._connect_socket()
  File "cassandra/connection.py", line 898, in cassandra.connection.Connection._connect_socket
ConnectionRefusedError: [Errno 111] Tried connecting to [('127.0.0.1', 9042)]. Last error: Connection refused
14:50:26,762 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.3:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 831, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 267, in __init__
    self._connect_socket()
  File "cassandra/connection.py", line 898, in cassandra.connection.Connection._connect_socket
ConnectionRefusedError: [Errno 111] Tried connecting to [('127.0.0.3', 9042)]. Last error: Connection refused

-------------------------------- live log call ---------------------------------
14:51:12,429 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
14:51:35,802 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.1:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 840, in cassandra.connection.Connection.factory
cassandra.OperationTimedOut: errors=Timed out creating connection (15 seconds), last_host=None
14:51:48,886 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:51:48,887 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:51:48,888 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:51:48,889 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:51:48,902 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:51:48,902 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:51:48,903 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:51:48,903 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:51:48,907 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:51:48,907 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:51:48,909 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:51:48,910 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
------------------------------ live log teardown -------------------------------
14:54:47,622 conftest ERROR Unexpected error in node1 log, error: 
WARN  [epollEventLoopGroup-5-4] 2022-01-30 14:51:35,810 PreV5Handlers.java:261 - Unknown exception in client networking
io.netty.channel.unix.Errors$NativeIoException: readAddress(..) failed: Connection reset by peer

===Flaky Test Report===

test_multi_partition_consistent_reads_after_write failed (1 runs remaining out of 2).
	<class 'cassandra.OperationTimedOut'>
	errors={'Connection defunct by heartbeat': 'Client request timeout. See Session.execute[_async](timeout)'}, last_host=127.0.0.3:9042
	[<TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2775>, <TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2808>, <TracebackEntry cassandra/cluster.py:2618>, <TracebackEntry cassandra/cluster.py:4894>]
test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 308.46 seconds ==========================
[msx] rc = 0
v2v2 running time = 331921177243
---> v1v1 and v2v2 test test suceeded.
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
14:55:52,949 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
14:56:08,728 cassandra.cluster WARNING Node 127.0.0.2:9042 is reporting a schema disagreement: None
14:56:27,947 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:56:27,948 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:56:27,950 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:56:27,953 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
14:56:27,965 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:56:27,966 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:56:27,966 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:56:27,967 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:56:27,972 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:56:27,972 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:56:27,974 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
14:56:27,976 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 253.82 seconds ==========================
[msx] rc = 0
v1v2 running time = 275337527802
---> v1v2 test suceeded.
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
15:00:37,470 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
15:00:52,960 cassandra.cluster WARNING Node 127.0.0.2:9042 is reporting a schema disagreement: None
15:01:13,255 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:01:13,257 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:01:13,258 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:01:13,259 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:01:13,273 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:01:13,274 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:01:13,274 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:01:13,275 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:01:13,279 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:01:13,280 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:01:13,283 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:01:13,287 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 270.52 seconds ==========================
[msx] rc = 0
v1v1 running time = 291873146221
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
15:05:19,655 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
15:05:58,934 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:05:58,935 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:05:58,936 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:05:58,938 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:05:58,953 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:05:58,954 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:05:58,954 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:05:58,955 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:05:58,958 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:05:58,964 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:05:58,966 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:05:58,966 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 261.36 seconds ==========================
[msx] rc = 0
v2v2 running time = 284577404576
---> v1v1 and v2v2 test test suceeded.
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
15:10:12,751 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
15:10:49,455 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:10:49,456 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:10:49,457 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:10:49,458 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:10:49,472 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:10:49,473 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:10:49,474 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:10:49,474 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:10:49,478 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:10:49,479 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:10:49,481 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:10:49,481 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 270.03 seconds ==========================
[msx] rc = 0
v1v2 running time = 293380688578
---> v1v2 test suceeded.
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
15:14:57,801 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
15:15:13,164 cassandra.cluster WARNING Node 127.0.0.2:9042 is reporting a schema disagreement: None
15:15:34,952 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:15:34,953 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:15:34,954 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:15:34,956 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:15:34,969 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:15:34,969 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:15:34,969 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:15:34,970 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:15:34,977 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:15:34,977 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:15:34,978 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:15:34,979 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 258.60 seconds ==========================
[msx] rc = 0
v1v1 running time = 282868876014
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
15:19:51,193 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
15:20:05,884 cassandra.cluster WARNING Node 127.0.0.2:9042 is reporting a schema disagreement: None
15:20:27,792 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:20:27,793 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:20:27,794 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:20:27,796 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:20:27,815 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:20:27,815 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:20:27,816 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:20:27,816 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:20:27,820 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:20:27,821 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:20:27,823 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:20:27,825 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 278.17 seconds ==========================
[msx] rc = 0
v2v2 running time = 301726626713
---> v1v1 and v2v2 test test suceeded.
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
15:24:47,504 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.

-------------------------------- live log call ---------------------------------
15:25:49,890 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
FAILED                                                                   [100%]

=================================== FAILURES ===================================
_ TestMaterializedViewsConsistency.test_multi_partition_consistent_reads_after_write _

self = <materialized_views_test.TestMaterializedViewsConsistency object at 0x7f56c9f47160>

    def test_multi_partition_consistent_reads_after_write(self):
        """
            Tests consistency of multiple writes to a multiple partitions
    
            @jira_ticket CASSANDRA-10981
            """
>       self._consistent_reads_after_write_test(5)

materialized_views_test.py:2775: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
materialized_views_test.py:2808: in _consistent_reads_after_write_test
    ('CREATE MATERIALIZED VIEW mvtest.mv1 AS '
cassandra/cluster.py:2618: in cassandra.cluster.Session.execute
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   cassandra.OperationTimedOut: errors={'Connection defunct by heartbeat': 'Client request timeout. See Session.execute[_async](timeout)'}, last_host=127.0.0.1:9042

cassandra/cluster.py:4894: OperationTimedOut
---------------------------- Captured stdout setup -----------------------------
15:24:02,783 ccm DEBUG Log-watching thread starting.
---------------------------- Captured stderr setup -----------------------------
swapoff: Not superuser.
------------------------------ Captured log setup ------------------------------
15:24:02,330 conftest INFO Starting execution of test_multi_partition_consistent_reads_after_write at 2022-01-30 15:24:02.330840
15:24:02,688 dtest_setup INFO cluster ccm directory: /tmp/dtest-gueadhs4
------------------------------ Captured log call -------------------------------
15:24:04,183 ccm INFO node1: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-gueadhs4/test/node1/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-gueadhs4/test/node1/conf'}
15:24:04,184 ccm INFO node1: using Java 8 for the current invocation
15:24:04,346 ccm INFO node1: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-gueadhs4/test/node1/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-gueadhs4/test/node1/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6'}
15:24:04,346 ccm INFO node1: using Java 8 for the current invocation
15:24:04,439 ccm INFO Starting node1 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
15:24:04,727 ccm INFO node2: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-gueadhs4/test/node2/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-gueadhs4/test/node2/conf'}
15:24:04,728 ccm INFO node2: using Java 8 for the current invocation
15:24:04,896 ccm INFO node2: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-gueadhs4/test/node2/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-gueadhs4/test/node2/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6'}
15:24:04,897 ccm INFO node2: using Java 8 for the current invocation
15:24:04,980 ccm INFO Starting node2 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
15:24:05,248 ccm INFO node3: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-gueadhs4/test/node3/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-gueadhs4/test/node3/conf'}
15:24:05,248 ccm INFO node3: using Java 8 for the current invocation
15:24:05,397 ccm INFO node3: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-gueadhs4/test/node3/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-gueadhs4/test/node3/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6'}
15:24:05,397 ccm INFO node3: using Java 8 for the current invocation
15:24:05,478 ccm INFO Starting node3 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
15:24:32,290 cassandra.cluster INFO New Cassandra host <Host: 127.0.0.3:9042 datacenter1> discovered
15:24:32,293 cassandra.cluster INFO New Cassandra host <Host: 127.0.0.1:9042 datacenter1> discovered
15:24:47,504 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
--------------------------- Captured stdout teardown ---------------------------
15:24:55,897 ccm DEBUG Log-watching thread exiting.
---------------------------- Captured stdout setup -----------------------------
15:25:00,471 ccm DEBUG Log-watching thread starting.
---------------------------- Captured stderr setup -----------------------------
swapoff: Not superuser.
------------------------------ Captured log setup ------------------------------
15:24:59,308 conftest INFO Starting execution of test_multi_partition_consistent_reads_after_write at 2022-01-30 15:24:59.308236
15:25:00,379 dtest_setup INFO cluster ccm directory: /tmp/dtest-s2xtt9_r
------------------------------ Captured log call -------------------------------
15:25:01,986 ccm INFO node1: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-s2xtt9_r/test/node1/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-s2xtt9_r/test/node1/conf'}
15:25:01,987 ccm INFO node1: using Java 8 for the current invocation
15:25:02,178 ccm INFO node1: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-s2xtt9_r/test/node1/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-s2xtt9_r/test/node1/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6'}
15:25:02,179 ccm INFO node1: using Java 8 for the current invocation
15:25:02,277 ccm INFO Starting node1 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
15:25:02,568 ccm INFO node2: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-s2xtt9_r/test/node2/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-s2xtt9_r/test/node2/conf'}
15:25:02,569 ccm INFO node2: using Java 8 for the current invocation
15:25:02,746 ccm INFO node2: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-s2xtt9_r/test/node2/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-s2xtt9_r/test/node2/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6'}
15:25:02,747 ccm INFO node2: using Java 8 for the current invocation
15:25:02,836 ccm INFO Starting node2 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
15:25:03,91 ccm INFO node3: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-s2xtt9_r/test/node3/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-s2xtt9_r/test/node3/conf'}
15:25:03,92 ccm INFO node3: using Java 8 for the current invocation
15:25:03,283 ccm INFO node3: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-s2xtt9_r/test/node3/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-s2xtt9_r/test/node3/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6'}
15:25:03,283 ccm INFO node3: using Java 8 for the current invocation
15:25:03,382 ccm INFO Starting node3 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
15:25:30,187 cassandra.cluster INFO New Cassandra host <Host: 127.0.0.3:9042 datacenter1> discovered
15:25:30,188 cassandra.cluster INFO New Cassandra host <Host: 127.0.0.1:9042 datacenter1> discovered
15:25:49,890 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
--------------------------- Captured stdout teardown ---------------------------
15:24:55,897 ccm DEBUG Log-watching thread exiting.
--------------------------- Captured stdout teardown ---------------------------
15:24:55,897 ccm DEBUG Log-watching thread exiting.
--------------------------- Captured stdout teardown ---------------------------
15:25:53,761 ccm DEBUG Log-watching thread exiting.
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write failed (1 runs remaining out of 2).
	<class 'cassandra.OperationTimedOut'>
	errors={'Connection defunct by heartbeat': 'Client request timeout. See Session.execute[_async](timeout)'}, last_host=127.0.0.1:9042
	[<TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2775>, <TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2808>, <TracebackEntry cassandra/cluster.py:2618>, <TracebackEntry cassandra/cluster.py:4894>]
test_multi_partition_consistent_reads_after_write failed; it passed 0 out of the required 1 times.
	<class 'cassandra.OperationTimedOut'>
	errors={'Connection defunct by heartbeat': 'Client request timeout. See Session.execute[_async](timeout)'}, last_host=127.0.0.1:9042
	[<TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2775>, <TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2808>, <TracebackEntry cassandra/cluster.py:2618>, <TracebackEntry cassandra/cluster.py:4894>]

===End Flaky Test Report===
========================== 1 failed in 112.23 seconds ==========================
[msx] rc = 1
v1v2 running time = 133804040503
---> v1v2 test failed.
proj: cassandra
u_test: materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
h_list: gc_warn_threshold_in_ms@@@CassandraDaemon@@@-2@@@100@@@1000
vv_mode: v1v2
result: FAIL
failureMessage: 
stackTrace: 

cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
15:26:56,510 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
15:27:36,155 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:27:36,158 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:27:36,164 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:27:36,165 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:27:36,174 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:27:36,177 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:27:36,179 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:27:36,181 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:27:36,182 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:27:36,187 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:27:36,208 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:27:36,222 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 270.07 seconds ==========================
[msx] rc = 0
v1v1 running time = 291551571909
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
15:31:47,883 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
15:32:23,507 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:32:23,508 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:32:23,509 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:32:23,510 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:32:23,524 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:32:23,525 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:32:23,525 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:32:23,526 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:32:23,530 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:32:23,530 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:32:23,532 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:32:23,534 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 260.77 seconds ==========================
[msx] rc = 0
v2v2 running time = 282168086260
---> v1v1 and v2v2 test test suceeded.
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
15:36:30,814 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
15:37:09,694 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:37:09,695 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:37:09,696 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:37:09,697 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:37:09,711 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:37:09,711 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:37:09,711 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:37:09,712 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:37:09,717 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:37:09,717 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:37:09,718 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:37:09,720 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 266.70 seconds ==========================
[msx] rc = 0
v1v2 running time = 289948967424
---> v1v2 test suceeded.
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
15:41:22,125 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
15:41:26,941 cassandra.cluster ERROR Exception refreshing schema in response to schema change:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 4206, in cassandra.cluster.refresh_schema_and_set_result
  File "cassandra/cluster.py", line 3686, in cassandra.cluster.ControlConnection._refresh_schema
  File "cassandra/cluster.py", line 3935, in cassandra.cluster.ControlConnection.wait_for_schema_agreement
  File "cassandra/cluster.py", line 3975, in cassandra.cluster.ControlConnection.wait_for_schema_agreement
  File "cassandra/cluster.py", line 3963, in cassandra.cluster.ControlConnection.wait_for_schema_agreement
  File "cassandra/connection.py", line 1041, in cassandra.connection.Connection.wait_for_responses
cassandra.connection.ConnectionShutdown: Connection <LibevConnection(140656847942432) 127.0.0.3:9042 (defunct)> is already closed
15:41:26,944 cassandra.cluster WARNING Host 127.0.0.2:9042 has been marked down
15:41:26,947 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.3:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 831, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 267, in __init__
    self._connect_socket()
  File "cassandra/connection.py", line 898, in cassandra.connection.Connection._connect_socket
ConnectionRefusedError: [Errno 111] Tried connecting to [('127.0.0.3', 9042)]. Last error: Connection refused
15:41:26,949 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.1:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 831, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 267, in __init__
    self._connect_socket()
  File "cassandra/connection.py", line 898, in cassandra.connection.Connection._connect_socket
ConnectionRefusedError: [Errno 111] Tried connecting to [('127.0.0.1', 9042)]. Last error: Connection refused
15:41:27,989 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.1:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 831, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 267, in __init__
    self._connect_socket()
  File "cassandra/connection.py", line 898, in cassandra.connection.Connection._connect_socket
ConnectionRefusedError: [Errno 111] Tried connecting to [('127.0.0.1', 9042)]. Last error: Connection refused
15:41:27,992 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.3:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 831, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 267, in __init__
    self._connect_socket()
  File "cassandra/connection.py", line 898, in cassandra.connection.Connection._connect_socket
ConnectionRefusedError: [Errno 111] Tried connecting to [('127.0.0.3', 9042)]. Last error: Connection refused
15:41:28,89 cassandra.pool WARNING Error attempting to reconnect to 127.0.0.2:9042, scheduling retry in 1.9 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused

-------------------------------- live log call ---------------------------------
15:42:20,540 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
15:42:57,54 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:42:57,55 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:42:57,57 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:42:57,58 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:42:57,74 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:42:57,74 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:42:57,75 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:42:57,75 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:42:57,79 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:42:57,79 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:42:57,80 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:42:57,82 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write failed (1 runs remaining out of 2).
	<class 'cassandra.OperationTimedOut'>
	errors={'Connection defunct by heartbeat': 'Client request timeout. See Session.execute[_async](timeout)'}, last_host=127.0.0.3:9042
	[<TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2775>, <TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2808>, <TracebackEntry cassandra/cluster.py:2618>, <TracebackEntry cassandra/cluster.py:4894>]
test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 326.14 seconds ==========================
[msx] rc = 0
v1v1 running time = 349775999277
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
15:47:18,849 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
15:47:34,544 cassandra.cluster WARNING Node 127.0.0.2:9042 is reporting a schema disagreement: None
15:47:54,46 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:47:54,47 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:47:54,50 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:47:54,52 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:47:54,103 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:47:54,105 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:47:54,108 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:47:54,110 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:47:54,113 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:47:54,114 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:47:54,116 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:47:54,119 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 269.07 seconds ==========================
[msx] rc = 0
v2v2 running time = 290543766762
---> v1v1 and v2v2 test test suceeded.
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
15:52:06,967 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
15:52:46,607 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:52:46,609 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:52:46,610 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:52:46,611 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:52:46,629 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:52:46,630 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:52:46,630 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:52:46,631 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:52:46,634 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:52:46,636 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:52:46,638 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:52:46,640 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 277.98 seconds ==========================
[msx] rc = 0
v1v2 running time = 299474014858
---> v1v2 test suceeded.
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
15:57:10,508 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
15:57:48,70 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:57:48,71 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:57:48,73 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:57:48,75 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
15:57:48,88 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:57:48,89 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:57:48,89 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:57:48,90 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:57:48,94 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:57:48,95 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:57:48,97 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
15:57:48,98 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 277.75 seconds ==========================
[msx] rc = 0
v1v1 running time = 299235882911
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
16:02:05,644 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
16:02:44,665 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:02:44,666 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:02:44,667 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:02:44,668 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:02:44,681 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:02:44,681 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:02:44,682 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:02:44,682 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:02:44,685 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:02:44,687 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:02:44,688 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:02:44,689 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 269.50 seconds ==========================
[msx] rc = 0
v2v2 running time = 292715847786
---> v1v1 and v2v2 test test suceeded.
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
16:06:55,299 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
16:07:34,112 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:07:34,113 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:07:34,115 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:07:34,116 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:07:34,130 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:07:34,131 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:07:34,131 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:07:34,132 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:07:34,136 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:07:34,137 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:07:34,138 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:07:34,141 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 272.19 seconds ==========================
[msx] rc = 0
v1v2 running time = 293651613654
---> v1v2 test suceeded.
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
16:11:52,198 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
16:12:06,985 cassandra.cluster WARNING Node 127.0.0.2:9042 is reporting a schema disagreement: None
16:12:30,728 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:12:30,729 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:12:30,730 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:12:30,732 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:12:30,745 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:12:30,745 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:12:30,746 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:12:30,746 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:12:30,750 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:12:30,751 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:12:30,752 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:12:30,754 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 272.99 seconds ==========================
[msx] rc = 0
v1v1 running time = 296438077545
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
16:16:44,48 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
16:16:59,479 cassandra.cluster WARNING Node 127.0.0.2:9042 is reporting a schema disagreement: None
16:17:21,24 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:17:21,25 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:17:21,26 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:17:21,27 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:17:21,44 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:17:21,44 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:17:21,45 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:17:21,45 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:17:21,49 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:17:21,50 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:17:21,52 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:17:21,54 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 269.46 seconds ==========================
[msx] rc = 0
v2v2 running time = 290908003726
---> v1v1 and v2v2 test test suceeded.
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
16:21:38,784 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
16:21:43,390 cassandra.cluster ERROR Exception refreshing schema in response to schema change:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 4206, in cassandra.cluster.refresh_schema_and_set_result
  File "cassandra/cluster.py", line 3686, in cassandra.cluster.ControlConnection._refresh_schema
  File "cassandra/cluster.py", line 3935, in cassandra.cluster.ControlConnection.wait_for_schema_agreement
  File "cassandra/cluster.py", line 3975, in cassandra.cluster.ControlConnection.wait_for_schema_agreement
  File "cassandra/cluster.py", line 3963, in cassandra.cluster.ControlConnection.wait_for_schema_agreement
  File "cassandra/connection.py", line 1076, in cassandra.connection.Connection.wait_for_responses
  File "cassandra/connection.py", line 1071, in cassandra.connection.Connection.wait_for_responses
  File "cassandra/connection.py", line 1570, in cassandra.connection.ResponseWaiter.deliver
cassandra.connection.ConnectionShutdown: [Errno 104] Connection reset by peer
16:21:43,391 cassandra.cluster WARNING Host 127.0.0.2:9042 has been marked down
16:21:43,492 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.3:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 831, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 267, in __init__
    self._connect_socket()
  File "cassandra/connection.py", line 898, in cassandra.connection.Connection._connect_socket
ConnectionRefusedError: [Errno 111] Tried connecting to [('127.0.0.3', 9042)]. Last error: Connection refused
16:21:43,493 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.1:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 831, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 267, in __init__
    self._connect_socket()
  File "cassandra/connection.py", line 898, in cassandra.connection.Connection._connect_socket
ConnectionRefusedError: [Errno 111] Tried connecting to [('127.0.0.1', 9042)]. Last error: Connection refused
16:21:44,495 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.1:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 831, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 267, in __init__
    self._connect_socket()
  File "cassandra/connection.py", line 898, in cassandra.connection.Connection._connect_socket
ConnectionRefusedError: [Errno 111] Tried connecting to [('127.0.0.1', 9042)]. Last error: Connection refused
16:21:44,496 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.3:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 831, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 267, in __init__
    self._connect_socket()
  File "cassandra/connection.py", line 898, in cassandra.connection.Connection._connect_socket
ConnectionRefusedError: [Errno 111] Tried connecting to [('127.0.0.3', 9042)]. Last error: Connection refused
16:21:44,595 cassandra.pool WARNING Error attempting to reconnect to 127.0.0.2:9042, scheduling retry in 2.06 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused
16:21:46,600 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.3:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 831, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 267, in __init__
    self._connect_socket()
  File "cassandra/connection.py", line 898, in cassandra.connection.Connection._connect_socket
ConnectionRefusedError: [Errno 111] Tried connecting to [('127.0.0.3', 9042)]. Last error: Connection refused
16:21:46,602 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.1:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 831, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 267, in __init__
    self._connect_socket()
  File "cassandra/connection.py", line 898, in cassandra.connection.Connection._connect_socket
ConnectionRefusedError: [Errno 111] Tried connecting to [('127.0.0.1', 9042)]. Last error: Connection refused
16:21:46,700 cassandra.pool WARNING Error attempting to reconnect to 127.0.0.2:9042, scheduling retry in 4.12 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused

-------------------------------- live log call ---------------------------------
16:22:36,86 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
FAILED                                                                   [100%]

=================================== FAILURES ===================================
_ TestMaterializedViewsConsistency.test_multi_partition_consistent_reads_after_write _

self = <materialized_views_test.TestMaterializedViewsConsistency object at 0x7ffa6c5145f8>

    def test_multi_partition_consistent_reads_after_write(self):
        """
            Tests consistency of multiple writes to a multiple partitions
    
            @jira_ticket CASSANDRA-10981
            """
>       self._consistent_reads_after_write_test(5)

materialized_views_test.py:2775: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
materialized_views_test.py:2808: in _consistent_reads_after_write_test
    ('CREATE MATERIALIZED VIEW mvtest.mv1 AS '
cassandra/cluster.py:2618: in cassandra.cluster.Session.execute
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   cassandra.OperationTimedOut: errors={'Connection defunct by heartbeat': 'Client request timeout. See Session.execute[_async](timeout)'}, last_host=127.0.0.2:9042

cassandra/cluster.py:4894: OperationTimedOut
---------------------------- Captured stdout setup -----------------------------
16:20:53,590 ccm DEBUG Log-watching thread starting.
---------------------------- Captured stderr setup -----------------------------
swapoff: Not superuser.
------------------------------ Captured log setup ------------------------------
16:20:52,734 conftest INFO Starting execution of test_multi_partition_consistent_reads_after_write at 2022-01-30 16:20:52.734236
16:20:53,494 dtest_setup INFO cluster ccm directory: /tmp/dtest-4ib42pf_
------------------------------ Captured log call -------------------------------
16:20:55,52 ccm INFO node1: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-4ib42pf_/test/node1/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-4ib42pf_/test/node1/conf'}
16:20:55,52 ccm INFO node1: using Java 8 for the current invocation
16:20:55,234 ccm INFO node1: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-4ib42pf_/test/node1/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-4ib42pf_/test/node1/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6'}
16:20:55,235 ccm INFO node1: using Java 8 for the current invocation
16:20:55,320 ccm INFO Starting node1 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
16:20:55,568 ccm INFO node2: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-4ib42pf_/test/node2/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-4ib42pf_/test/node2/conf'}
16:20:55,568 ccm INFO node2: using Java 8 for the current invocation
16:20:55,752 ccm INFO node2: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-4ib42pf_/test/node2/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-4ib42pf_/test/node2/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6'}
16:20:55,753 ccm INFO node2: using Java 8 for the current invocation
16:20:55,827 ccm INFO Starting node2 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
16:20:56,115 ccm INFO node3: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-4ib42pf_/test/node3/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-4ib42pf_/test/node3/conf'}
16:20:56,116 ccm INFO node3: using Java 8 for the current invocation
16:20:56,299 ccm INFO node3: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-4ib42pf_/test/node3/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-4ib42pf_/test/node3/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6'}
16:20:56,300 ccm INFO node3: using Java 8 for the current invocation
16:20:56,396 ccm INFO Starting node3 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
16:21:21,197 cassandra.cluster INFO New Cassandra host <Host: 127.0.0.3:9042 datacenter1> discovered
16:21:21,199 cassandra.cluster INFO New Cassandra host <Host: 127.0.0.1:9042 datacenter1> discovered
16:21:38,784 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
--------------------------- Captured stdout teardown ---------------------------
16:21:47,15 ccm DEBUG Log-watching thread exiting.
---------------------------- Captured stdout setup -----------------------------
16:21:52,33 ccm DEBUG Log-watching thread starting.
---------------------------- Captured stderr setup -----------------------------
swapoff: Not superuser.
------------------------------ Captured log setup ------------------------------
16:21:50,796 conftest INFO Starting execution of test_multi_partition_consistent_reads_after_write at 2022-01-30 16:21:50.796061
16:21:51,917 dtest_setup INFO cluster ccm directory: /tmp/dtest-x4o3t8bl
------------------------------ Captured log call -------------------------------
16:21:53,671 ccm INFO node1: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-x4o3t8bl/test/node1/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-x4o3t8bl/test/node1/conf'}
16:21:53,672 ccm INFO node1: using Java 8 for the current invocation
16:21:53,847 ccm INFO node1: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-x4o3t8bl/test/node1/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-x4o3t8bl/test/node1/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6'}
16:21:53,847 ccm INFO node1: using Java 8 for the current invocation
16:21:53,936 ccm INFO Starting node1 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
16:21:54,215 ccm INFO node2: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-x4o3t8bl/test/node2/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-x4o3t8bl/test/node2/conf'}
16:21:54,217 ccm INFO node2: using Java 8 for the current invocation
16:21:54,386 ccm INFO node2: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-x4o3t8bl/test/node2/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-x4o3t8bl/test/node2/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6'}
16:21:54,387 ccm INFO node2: using Java 8 for the current invocation
16:21:54,473 ccm INFO Starting node2 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
16:21:54,740 ccm INFO node3: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-x4o3t8bl/test/node3/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-x4o3t8bl/test/node3/conf'}
16:21:54,741 ccm INFO node3: using Java 8 for the current invocation
16:21:54,948 ccm INFO node3: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-x4o3t8bl/test/node3/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-x4o3t8bl/test/node3/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6'}
16:21:54,949 ccm INFO node3: using Java 8 for the current invocation
16:21:55,29 ccm INFO Starting node3 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
16:22:20,825 cassandra.cluster INFO New Cassandra host <Host: 127.0.0.3:9042 datacenter1> discovered
16:22:20,826 cassandra.cluster INFO New Cassandra host <Host: 127.0.0.1:9042 datacenter1> discovered
16:22:36,86 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
--------------------------- Captured stdout teardown ---------------------------
16:21:47,15 ccm DEBUG Log-watching thread exiting.
--------------------------- Captured stdout teardown ---------------------------
16:21:47,15 ccm DEBUG Log-watching thread exiting.
--------------------------- Captured stdout teardown ---------------------------
16:22:41,26 ccm DEBUG Log-watching thread exiting.
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write failed (1 runs remaining out of 2).
	<class 'cassandra.OperationTimedOut'>
	errors={'Connection defunct by heartbeat': 'Client request timeout. See Session.execute[_async](timeout)'}, last_host=127.0.0.2:9042
	[<TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2775>, <TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2808>, <TracebackEntry cassandra/cluster.py:2618>, <TracebackEntry cassandra/cluster.py:4894>]
test_multi_partition_consistent_reads_after_write failed; it passed 0 out of the required 1 times.
	<class 'cassandra.OperationTimedOut'>
	errors={'Connection defunct by heartbeat': 'Client request timeout. See Session.execute[_async](timeout)'}, last_host=127.0.0.2:9042
	[<TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2775>, <TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2808>, <TracebackEntry cassandra/cluster.py:2618>, <TracebackEntry cassandra/cluster.py:4894>]

===End Flaky Test Report===
========================== 1 failed in 111.11 seconds ==========================
[msx] rc = 1
v1v2 running time = 132652910740
---> v1v2 test failed.
proj: cassandra
u_test: materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
h_list: gc_warn_threshold_in_ms@@@CassandraDaemon@@@-2@@@100@@@1000
vv_mode: v1v2
result: FAIL
failureMessage: 
stackTrace: 

cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
16:23:51,238 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
16:24:28,408 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:24:28,409 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:24:28,411 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:24:28,411 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:24:28,427 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:24:28,427 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:24:28,428 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:24:28,428 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:24:28,431 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:24:28,432 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:24:28,433 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:24:28,434 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 274.51 seconds ==========================
[msx] rc = 0
v1v1 running time = 295900168669
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
16:28:47,718 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
16:28:51,882 cassandra.cluster ERROR Exception refreshing schema in response to schema change:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 4206, in cassandra.cluster.refresh_schema_and_set_result
  File "cassandra/cluster.py", line 3686, in cassandra.cluster.ControlConnection._refresh_schema
  File "cassandra/cluster.py", line 3935, in cassandra.cluster.ControlConnection.wait_for_schema_agreement
  File "cassandra/cluster.py", line 3975, in cassandra.cluster.ControlConnection.wait_for_schema_agreement
  File "cassandra/cluster.py", line 3963, in cassandra.cluster.ControlConnection.wait_for_schema_agreement
  File "cassandra/connection.py", line 1041, in cassandra.connection.Connection.wait_for_responses
cassandra.connection.ConnectionShutdown: Connection <LibevConnection(140399668638664) 127.0.0.1:9042 (defunct)> is already closed
16:28:51,885 cassandra.cluster WARNING Host 127.0.0.2:9042 has been marked down
16:28:51,887 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.3:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 831, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 267, in __init__
    self._connect_socket()
  File "cassandra/connection.py", line 898, in cassandra.connection.Connection._connect_socket
ConnectionRefusedError: [Errno 111] Tried connecting to [('127.0.0.3', 9042)]. Last error: Connection refused
16:28:51,889 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.1:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 831, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 267, in __init__
    self._connect_socket()
  File "cassandra/connection.py", line 898, in cassandra.connection.Connection._connect_socket
ConnectionRefusedError: [Errno 111] Tried connecting to [('127.0.0.1', 9042)]. Last error: Connection refused
16:28:52,982 cassandra.pool WARNING Error attempting to reconnect to 127.0.0.2:9042, scheduling retry in 1.74 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused
16:28:52,983 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.1:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 831, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 267, in __init__
    self._connect_socket()
  File "cassandra/connection.py", line 898, in cassandra.connection.Connection._connect_socket
ConnectionRefusedError: [Errno 111] Tried connecting to [('127.0.0.1', 9042)]. Last error: Connection refused
16:28:52,987 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.3:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 831, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 267, in __init__
    self._connect_socket()
  File "cassandra/connection.py", line 898, in cassandra.connection.Connection._connect_socket
ConnectionRefusedError: [Errno 111] Tried connecting to [('127.0.0.3', 9042)]. Last error: Connection refused

-------------------------------- live log call ---------------------------------
16:29:42,490 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
FAILED                                                                   [100%]

=================================== FAILURES ===================================
_ TestMaterializedViewsConsistency.test_multi_partition_consistent_reads_after_write _

self = <materialized_views_test.TestMaterializedViewsConsistency object at 0x7fb159eafef0>

    def test_multi_partition_consistent_reads_after_write(self):
        """
            Tests consistency of multiple writes to a multiple partitions
    
            @jira_ticket CASSANDRA-10981
            """
>       self._consistent_reads_after_write_test(5)

materialized_views_test.py:2775: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
materialized_views_test.py:2808: in _consistent_reads_after_write_test
    ('CREATE MATERIALIZED VIEW mvtest.mv1 AS '
cassandra/cluster.py:2618: in cassandra.cluster.Session.execute
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   cassandra.OperationTimedOut: errors={'Connection defunct by heartbeat': 'Client request timeout. See Session.execute[_async](timeout)'}, last_host=127.0.0.1:9042

cassandra/cluster.py:4894: OperationTimedOut
---------------------------- Captured stdout setup -----------------------------
16:28:02,523 ccm DEBUG Log-watching thread starting.
---------------------------- Captured stderr setup -----------------------------
swapoff: Not superuser.
------------------------------ Captured log setup ------------------------------
16:28:01,313 conftest INFO Starting execution of test_multi_partition_consistent_reads_after_write at 2022-01-30 16:28:01.313153
16:28:02,422 dtest_setup INFO cluster ccm directory: /tmp/dtest-5ucpw6r_
------------------------------ Captured log call -------------------------------
16:28:04,74 ccm INFO node1: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-5ucpw6r_/test/node1/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-5ucpw6r_/test/node1/conf'}
16:28:04,75 ccm INFO node1: using Java 8 for the current invocation
16:28:04,244 ccm INFO node1: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-5ucpw6r_/test/node1/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-5ucpw6r_/test/node1/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6'}
16:28:04,244 ccm INFO node1: using Java 8 for the current invocation
16:28:04,353 ccm INFO Starting node1 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
16:28:04,616 ccm INFO node2: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-5ucpw6r_/test/node2/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-5ucpw6r_/test/node2/conf'}
16:28:04,617 ccm INFO node2: using Java 8 for the current invocation
16:28:04,830 ccm INFO node2: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-5ucpw6r_/test/node2/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-5ucpw6r_/test/node2/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6'}
16:28:04,830 ccm INFO node2: using Java 8 for the current invocation
16:28:04,917 ccm INFO Starting node2 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
16:28:05,215 ccm INFO node3: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-5ucpw6r_/test/node3/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-5ucpw6r_/test/node3/conf'}
16:28:05,216 ccm INFO node3: using Java 8 for the current invocation
16:28:05,406 ccm INFO node3: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-5ucpw6r_/test/node3/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-5ucpw6r_/test/node3/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6'}
16:28:05,407 ccm INFO node3: using Java 8 for the current invocation
16:28:05,495 ccm INFO Starting node3 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
16:28:32,358 cassandra.cluster INFO New Cassandra host <Host: 127.0.0.3:9042 datacenter1> discovered
16:28:32,360 cassandra.cluster INFO New Cassandra host <Host: 127.0.0.1:9042 datacenter1> discovered
16:28:47,718 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
--------------------------- Captured stdout teardown ---------------------------
16:28:54,434 ccm DEBUG Log-watching thread exiting.
---------------------------- Captured stdout setup -----------------------------
16:28:58,647 ccm DEBUG Log-watching thread starting.
---------------------------- Captured stderr setup -----------------------------
swapoff: Not superuser.
------------------------------ Captured log setup ------------------------------
16:28:57,688 conftest INFO Starting execution of test_multi_partition_consistent_reads_after_write at 2022-01-30 16:28:57.688543
16:28:58,549 dtest_setup INFO cluster ccm directory: /tmp/dtest-hjqq49hz
------------------------------ Captured log call -------------------------------
16:29:00,362 ccm INFO node1: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-hjqq49hz/test/node1/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-hjqq49hz/test/node1/conf'}
16:29:00,364 ccm INFO node1: using Java 8 for the current invocation
16:29:00,562 ccm INFO node1: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-hjqq49hz/test/node1/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-hjqq49hz/test/node1/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6'}
16:29:00,563 ccm INFO node1: using Java 8 for the current invocation
16:29:00,659 ccm INFO Starting node1 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
16:29:00,994 ccm INFO node2: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-hjqq49hz/test/node2/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-hjqq49hz/test/node2/conf'}
16:29:00,995 ccm INFO node2: using Java 8 for the current invocation
16:29:01,229 ccm INFO node2: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-hjqq49hz/test/node2/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-hjqq49hz/test/node2/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6'}
16:29:01,230 ccm INFO node2: using Java 8 for the current invocation
16:29:01,322 ccm INFO Starting node2 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
16:29:01,601 ccm INFO node3: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-hjqq49hz/test/node3/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-hjqq49hz/test/node3/conf'}
16:29:01,602 ccm INFO node3: using Java 8 for the current invocation
16:29:01,768 ccm INFO node3: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-hjqq49hz/test/node3/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-hjqq49hz/test/node3/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6'}
16:29:01,769 ccm INFO node3: using Java 8 for the current invocation
16:29:01,850 ccm INFO Starting node3 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
16:29:27,674 cassandra.cluster INFO New Cassandra host <Host: 127.0.0.3:9042 datacenter1> discovered
16:29:27,675 cassandra.cluster INFO New Cassandra host <Host: 127.0.0.1:9042 datacenter1> discovered
16:29:42,490 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
--------------------------- Captured stdout teardown ---------------------------
16:28:54,434 ccm DEBUG Log-watching thread exiting.
--------------------------- Captured stdout teardown ---------------------------
16:28:54,434 ccm DEBUG Log-watching thread exiting.
--------------------------- Captured stdout teardown ---------------------------
16:29:46,981 ccm DEBUG Log-watching thread exiting.
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write failed (1 runs remaining out of 2).
	<class 'cassandra.OperationTimedOut'>
	errors={'Connection defunct by heartbeat': 'Client request timeout. See Session.execute[_async](timeout)'}, last_host=127.0.0.1:9042
	[<TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2775>, <TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2808>, <TracebackEntry cassandra/cluster.py:2618>, <TracebackEntry cassandra/cluster.py:4894>]
test_multi_partition_consistent_reads_after_write failed; it passed 0 out of the required 1 times.
	<class 'cassandra.OperationTimedOut'>
	errors={'Connection defunct by heartbeat': 'Client request timeout. See Session.execute[_async](timeout)'}, last_host=127.0.0.1:9042
	[<TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2775>, <TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2808>, <TracebackEntry cassandra/cluster.py:2618>, <TracebackEntry cassandra/cluster.py:4894>]

===End Flaky Test Report===
========================== 1 failed in 106.49 seconds ==========================
[msx] rc = 1
v2v2 running time = 128179678488
---> v1v1 or v2v2 test failed.
v2v2 failed in a hypo test
proj: cassandra
u_test: materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
h_list: gc_warn_threshold_in_ms@@@CassandraDaemon@@@-2@@@100@@@1000
vv_mode: v2v2
result: FAIL
failureMessage: 
stackTrace: 

cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
16:30:53,448 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
16:30:58,908 cassandra.cluster ERROR Exception refreshing schema in response to schema change:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 4206, in cassandra.cluster.refresh_schema_and_set_result
  File "cassandra/cluster.py", line 3686, in cassandra.cluster.ControlConnection._refresh_schema
  File "cassandra/cluster.py", line 3935, in cassandra.cluster.ControlConnection.wait_for_schema_agreement
  File "cassandra/cluster.py", line 3975, in cassandra.cluster.ControlConnection.wait_for_schema_agreement
  File "cassandra/cluster.py", line 3963, in cassandra.cluster.ControlConnection.wait_for_schema_agreement
  File "cassandra/connection.py", line 1076, in cassandra.connection.Connection.wait_for_responses
  File "cassandra/connection.py", line 1071, in cassandra.connection.Connection.wait_for_responses
  File "cassandra/connection.py", line 1570, in cassandra.connection.ResponseWaiter.deliver
cassandra.connection.ConnectionShutdown: [Errno 104] Connection reset by peer
16:30:58,909 cassandra.cluster WARNING Host 127.0.0.2:9042 has been marked down
16:30:58,913 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.3:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 831, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 267, in __init__
    self._connect_socket()
  File "cassandra/connection.py", line 898, in cassandra.connection.Connection._connect_socket
ConnectionRefusedError: [Errno 111] Tried connecting to [('127.0.0.3', 9042)]. Last error: Connection refused
16:30:58,960 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.1:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 837, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 350, in handle_read
    buf = self._socket.recv(self.in_buffer_size)
ConnectionResetError: [Errno 104] Connection reset by peer
16:30:59,920 cassandra.pool WARNING Error attempting to reconnect to 127.0.0.2:9042, scheduling retry in 1.7 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused
16:31:00,19 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.1:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 831, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 267, in __init__
    self._connect_socket()
  File "cassandra/connection.py", line 898, in cassandra.connection.Connection._connect_socket
ConnectionRefusedError: [Errno 111] Tried connecting to [('127.0.0.1', 9042)]. Last error: Connection refused
16:31:00,22 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.3:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 831, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 267, in __init__
    self._connect_socket()
  File "cassandra/connection.py", line 898, in cassandra.connection.Connection._connect_socket
ConnectionRefusedError: [Errno 111] Tried connecting to [('127.0.0.3', 9042)]. Last error: Connection refused

-------------------------------- live log call ---------------------------------
16:31:52,633 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
FAILED                                                                   [100%]

=================================== FAILURES ===================================
_ TestMaterializedViewsConsistency.test_multi_partition_consistent_reads_after_write _

self = <materialized_views_test.TestMaterializedViewsConsistency object at 0x7fa4cc587588>

    def test_multi_partition_consistent_reads_after_write(self):
        """
            Tests consistency of multiple writes to a multiple partitions
    
            @jira_ticket CASSANDRA-10981
            """
>       self._consistent_reads_after_write_test(5)

materialized_views_test.py:2775: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
materialized_views_test.py:2808: in _consistent_reads_after_write_test
    ('CREATE MATERIALIZED VIEW mvtest.mv1 AS '
cassandra/cluster.py:2618: in cassandra.cluster.Session.execute
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   cassandra.OperationTimedOut: errors={'Connection defunct by heartbeat': 'Client request timeout. See Session.execute[_async](timeout)'}, last_host=127.0.0.2:9042

cassandra/cluster.py:4894: OperationTimedOut
---------------------------- Captured stdout setup -----------------------------
16:30:10,668 ccm DEBUG Log-watching thread starting.
---------------------------- Captured stderr setup -----------------------------
swapoff: Not superuser.
------------------------------ Captured log setup ------------------------------
16:30:09,874 conftest INFO Starting execution of test_multi_partition_consistent_reads_after_write at 2022-01-30 16:30:09.874004
16:30:10,580 dtest_setup INFO cluster ccm directory: /tmp/dtest-zlw85_ky
------------------------------ Captured log call -------------------------------
16:30:12,47 ccm INFO node1: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-zlw85_ky/test/node1/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-zlw85_ky/test/node1/conf'}
16:30:12,48 ccm INFO node1: using Java 8 for the current invocation
16:30:12,208 ccm INFO node1: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-zlw85_ky/test/node1/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-zlw85_ky/test/node1/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6'}
16:30:12,209 ccm INFO node1: using Java 8 for the current invocation
16:30:12,345 ccm INFO Starting node1 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
16:30:12,664 ccm INFO node2: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-zlw85_ky/test/node2/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-zlw85_ky/test/node2/conf'}
16:30:12,666 ccm INFO node2: using Java 8 for the current invocation
16:30:12,845 ccm INFO node2: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-zlw85_ky/test/node2/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-zlw85_ky/test/node2/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6'}
16:30:12,846 ccm INFO node2: using Java 8 for the current invocation
16:30:12,997 ccm INFO Starting node2 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
16:30:13,276 ccm INFO node3: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-zlw85_ky/test/node3/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-zlw85_ky/test/node3/conf'}
16:30:13,276 ccm INFO node3: using Java 8 for the current invocation
16:30:13,451 ccm INFO node3: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-zlw85_ky/test/node3/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-zlw85_ky/test/node3/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6'}
16:30:13,451 ccm INFO node3: using Java 8 for the current invocation
16:30:13,531 ccm INFO Starting node3 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
16:30:39,347 cassandra.cluster INFO New Cassandra host <Host: 127.0.0.3:9042 datacenter1> discovered
16:30:39,350 cassandra.cluster INFO New Cassandra host <Host: 127.0.0.1:9042 datacenter1> discovered
16:30:53,448 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
--------------------------- Captured stdout teardown ---------------------------
16:31:01,912 ccm DEBUG Log-watching thread exiting.
---------------------------- Captured stdout setup -----------------------------
16:31:06,288 ccm DEBUG Log-watching thread starting.
---------------------------- Captured stderr setup -----------------------------
swapoff: Not superuser.
------------------------------ Captured log setup ------------------------------
16:31:05,166 conftest INFO Starting execution of test_multi_partition_consistent_reads_after_write at 2022-01-30 16:31:05.166854
16:31:06,194 dtest_setup INFO cluster ccm directory: /tmp/dtest-e_8lra8e
------------------------------ Captured log call -------------------------------
16:31:08,228 ccm INFO node1: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-e_8lra8e/test/node1/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-e_8lra8e/test/node1/conf'}
16:31:08,228 ccm INFO node1: using Java 8 for the current invocation
16:31:08,463 ccm INFO node1: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-e_8lra8e/test/node1/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-e_8lra8e/test/node1/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6'}
16:31:08,464 ccm INFO node1: using Java 8 for the current invocation
16:31:08,588 ccm INFO Starting node1 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
16:31:08,955 ccm INFO node2: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-e_8lra8e/test/node2/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-e_8lra8e/test/node2/conf'}
16:31:08,956 ccm INFO node2: using Java 8 for the current invocation
16:31:09,245 ccm INFO node2: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-e_8lra8e/test/node2/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-e_8lra8e/test/node2/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6'}
16:31:09,246 ccm INFO node2: using Java 8 for the current invocation
16:31:09,347 ccm INFO Starting node2 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
16:31:09,777 ccm INFO node3: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-e_8lra8e/test/node3/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-e_8lra8e/test/node3/conf'}
16:31:09,778 ccm INFO node3: using Java 8 for the current invocation
16:31:10,99 ccm INFO node3: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-e_8lra8e/test/node3/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-e_8lra8e/test/node3/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6'}
16:31:10,100 ccm INFO node3: using Java 8 for the current invocation
16:31:10,210 ccm INFO Starting node3 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
16:31:38,116 cassandra.cluster INFO New Cassandra host <Host: 127.0.0.3:9042 datacenter1> discovered
16:31:38,117 cassandra.cluster INFO New Cassandra host <Host: 127.0.0.1:9042 datacenter1> discovered
16:31:52,633 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
--------------------------- Captured stdout teardown ---------------------------
16:31:01,912 ccm DEBUG Log-watching thread exiting.
--------------------------- Captured stdout teardown ---------------------------
16:31:01,912 ccm DEBUG Log-watching thread exiting.
--------------------------- Captured stdout teardown ---------------------------
16:31:57,592 ccm DEBUG Log-watching thread exiting.
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write failed (1 runs remaining out of 2).
	<class 'cassandra.OperationTimedOut'>
	errors={'Connection defunct by heartbeat': 'Client request timeout. See Session.execute[_async](timeout)'}, last_host=127.0.0.2:9042
	[<TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2775>, <TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2808>, <TracebackEntry cassandra/cluster.py:2618>, <TracebackEntry cassandra/cluster.py:4894>]
test_multi_partition_consistent_reads_after_write failed; it passed 0 out of the required 1 times.
	<class 'cassandra.OperationTimedOut'>
	errors={'Connection defunct by heartbeat': 'Client request timeout. See Session.execute[_async](timeout)'}, last_host=127.0.0.2:9042
	[<TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2775>, <TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2808>, <TracebackEntry cassandra/cluster.py:2618>, <TracebackEntry cassandra/cluster.py:4894>]

===End Flaky Test Report===
========================== 1 failed in 108.76 seconds ==========================
[msx] rc = 1
v1v2 running time = 130483014283
---> v1v2 test failed.
proj: cassandra
u_test: materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
h_list: gc_warn_threshold_in_ms@@@CassandraDaemon@@@-2@@@100@@@1000
vv_mode: v1v2
result: FAIL
failureMessage: 
stackTrace: 

cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
16:33:05,43 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
16:33:28,971 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.1:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 840, in cassandra.connection.Connection.factory
cassandra.OperationTimedOut: errors=Timed out creating connection (15 seconds), last_host=None
16:33:41,380 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:33:41,381 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:33:41,383 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:33:41,384 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:33:41,399 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:33:41,399 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:33:41,400 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:33:41,400 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:33:41,404 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:33:41,405 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:33:41,407 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:33:41,408 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 265.25 seconds ==========================
[msx] rc = 0
v1v1 running time = 286686000616
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
16:37:50,550 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
16:37:55,155 cassandra.cluster ERROR Exception refreshing schema in response to schema change:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 4206, in cassandra.cluster.refresh_schema_and_set_result
  File "cassandra/cluster.py", line 3686, in cassandra.cluster.ControlConnection._refresh_schema
  File "cassandra/cluster.py", line 3935, in cassandra.cluster.ControlConnection.wait_for_schema_agreement
  File "cassandra/cluster.py", line 3975, in cassandra.cluster.ControlConnection.wait_for_schema_agreement
  File "cassandra/cluster.py", line 3963, in cassandra.cluster.ControlConnection.wait_for_schema_agreement
  File "cassandra/connection.py", line 1041, in cassandra.connection.Connection.wait_for_responses
cassandra.connection.ConnectionShutdown: Connection <LibevConnection(139999508302704) 127.0.0.2:9042 (defunct)> is already closed
16:37:55,157 cassandra.cluster WARNING Host 127.0.0.2:9042 has been marked down
16:37:55,161 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.3:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 831, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 267, in __init__
    self._connect_socket()
  File "cassandra/connection.py", line 898, in cassandra.connection.Connection._connect_socket
ConnectionRefusedError: [Errno 111] Tried connecting to [('127.0.0.3', 9042)]. Last error: Connection refused
16:37:55,163 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.1:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 831, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 267, in __init__
    self._connect_socket()
  File "cassandra/connection.py", line 898, in cassandra.connection.Connection._connect_socket
ConnectionRefusedError: [Errno 111] Tried connecting to [('127.0.0.1', 9042)]. Last error: Connection refused
16:37:56,269 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.1:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 831, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 267, in __init__
    self._connect_socket()
  File "cassandra/connection.py", line 898, in cassandra.connection.Connection._connect_socket
ConnectionRefusedError: [Errno 111] Tried connecting to [('127.0.0.1', 9042)]. Last error: Connection refused
16:37:56,271 cassandra.pool WARNING Error attempting to reconnect to 127.0.0.2:9042, scheduling retry in 1.8 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused
16:37:56,273 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.3:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 831, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 267, in __init__
    self._connect_socket()
  File "cassandra/connection.py", line 898, in cassandra.connection.Connection._connect_socket
ConnectionRefusedError: [Errno 111] Tried connecting to [('127.0.0.3', 9042)]. Last error: Connection refused
16:37:58,80 cassandra.pool WARNING Error attempting to reconnect to 127.0.0.2:9042, scheduling retry in 3.56 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused

-------------------------------- live log call ---------------------------------
16:38:45,645 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
16:39:22,528 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:39:22,529 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:39:22,531 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:39:22,534 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:39:22,546 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:39:22,546 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:39:22,547 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:39:22,547 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:39:22,551 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:39:22,552 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:39:22,554 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:39:22,554 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write failed (1 runs remaining out of 2).
	<class 'cassandra.OperationTimedOut'>
	errors={'Connection defunct by heartbeat': 'Client request timeout. See Session.execute[_async](timeout)'}, last_host=127.0.0.2:9042
	[<TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2775>, <TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2808>, <TracebackEntry cassandra/cluster.py:2618>, <TracebackEntry cassandra/cluster.py:4894>]
test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 324.27 seconds ==========================
[msx] rc = 0
v2v2 running time = 345659996479
---> v1v1 and v2v2 test test suceeded.
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
16:43:35,138 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
16:43:50,51 cassandra.cluster WARNING Node 127.0.0.2:9042 is reporting a schema disagreement: None
16:44:11,581 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:44:11,582 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:44:11,584 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:44:11,585 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:44:11,608 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:44:11,609 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:44:11,610 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:44:11,611 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:44:11,614 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:44:11,615 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:44:11,616 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:44:11,618 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 267.65 seconds ==========================
[msx] rc = 0
v1v2 running time = 289182287462
---> v1v2 test suceeded.
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
16:48:27,867 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
16:48:51,425 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.3:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 840, in cassandra.connection.Connection.factory
cassandra.OperationTimedOut: errors=Timed out creating connection (15 seconds), last_host=None
16:49:03,704 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:49:03,705 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:49:03,706 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:49:03,707 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:49:03,724 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:49:03,724 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:49:03,725 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:49:03,725 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:49:03,729 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:49:03,731 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:49:03,732 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:49:03,735 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 273.24 seconds ==========================
[msx] rc = 0
v1v1 running time = 294832727376
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
16:53:24,254 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
16:53:39,813 cassandra.cluster WARNING Node 127.0.0.2:9042 is reporting a schema disagreement: None
16:54:03,99 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:54:03,101 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:54:03,102 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:54:03,103 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:54:03,119 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:54:03,119 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:54:03,120 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:54:03,120 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:54:03,123 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:54:03,124 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:54:03,125 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:54:03,127 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 277.83 seconds ==========================
[msx] rc = 0
v2v2 running time = 300987663401
---> v1v1 and v2v2 test test suceeded.
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
16:58:19,54 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
16:58:54,681 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:58:54,683 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:58:54,684 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:58:54,685 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
16:58:54,702 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:58:54,703 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:58:54,703 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:58:54,704 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:58:54,707 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:58:54,709 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:58:54,712 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
16:58:54,713 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 252.21 seconds ==========================
[msx] rc = 0
v1v2 running time = 275683461580
---> v1v2 test suceeded.
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
17:02:56,67 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
17:03:34,897 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:03:34,899 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:03:34,900 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:03:34,901 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:03:34,918 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:03:34,918 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:03:34,919 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:03:34,920 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:03:34,924 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:03:34,925 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:03:34,926 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:03:34,928 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 266.46 seconds ==========================
[msx] rc = 0
v1v1 running time = 287899242613
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
17:07:44,680 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
17:08:06,882 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.1:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 840, in cassandra.connection.Connection.factory
cassandra.OperationTimedOut: errors=Timed out creating connection (15 seconds), last_host=None
17:08:21,835 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:08:21,835 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:08:21,837 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:08:21,838 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:08:21,851 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:08:21,851 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:08:21,853 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:08:21,853 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:08:21,855 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:08:21,857 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:08:21,859 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:08:21,861 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
------------------------------ live log teardown -------------------------------
17:11:23,19 conftest ERROR Unexpected error in node1 log, error: 
WARN  [epollEventLoopGroup-5-4] 2022-01-30 17:08:06,889 PreV5Handlers.java:261 - Unknown exception in client networking
io.netty.channel.unix.Errors$NativeIoException: readAddress(..) failed: Connection reset by peer

===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 263.43 seconds ==========================
[msx] rc = 0
v2v2 running time = 286914551802
---> v1v1 and v2v2 test test suceeded.
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
17:12:33,482 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
17:12:48,873 cassandra.cluster WARNING Node 127.0.0.2:9042 is reporting a schema disagreement: None
17:13:07,985 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:13:07,986 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:13:07,987 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:13:07,988 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:13:08,3 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:13:08,4 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:13:08,4 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:13:08,6 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:13:08,9 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:13:08,9 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:13:08,10 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:13:08,13 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 270.64 seconds ==========================
[msx] rc = 0
v1v2 running time = 292075974139
---> v1v2 test suceeded.
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
17:17:24,123 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
17:17:39,61 cassandra.cluster WARNING Node 127.0.0.2:9042 is reporting a schema disagreement: None
17:18:01,285 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:18:01,287 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:18:01,288 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:18:01,289 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:18:01,306 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:18:01,306 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:18:01,307 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:18:01,308 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:18:01,312 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:18:01,313 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:18:01,322 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:18:01,323 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 271.66 seconds ==========================
[msx] rc = 0
v1v1 running time = 293083762903
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
17:22:13,233 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
17:22:28,5 cassandra.cluster WARNING Node 127.0.0.2:9042 is reporting a schema disagreement: None
17:22:49,291 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:22:49,292 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:22:49,294 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:22:49,295 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:22:49,313 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:22:49,313 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:22:49,313 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:22:49,314 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:22:49,316 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:22:49,317 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:22:49,320 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:22:49,322 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 262.88 seconds ==========================
[msx] rc = 0
v2v2 running time = 284318990853
---> v1v1 and v2v2 test test suceeded.
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
17:26:57,112 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
17:27:32,40 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:27:32,42 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:27:32,43 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:27:32,44 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:27:32,61 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:27:32,61 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:27:32,62 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:27:32,63 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:27:32,65 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:27:32,66 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:27:32,68 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:27:32,69 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 263.52 seconds ==========================
[msx] rc = 0
v1v2 running time = 285000240234
---> v1v2 test suceeded.
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
17:31:47,617 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
17:32:02,727 cassandra.cluster WARNING Node 127.0.0.2:9042 is reporting a schema disagreement: None
17:32:22,169 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:32:22,171 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:32:22,172 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:32:22,172 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:32:22,185 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:32:22,186 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:32:22,186 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:32:22,187 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:32:22,191 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:32:22,191 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:32:22,193 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:32:22,195 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:32:24,239 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.2:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3599, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 3596, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 3698, in cassandra.cluster.ControlConnection._refresh_schema
  File "cassandra/metadata.py", line 142, in cassandra.metadata.Metadata.refresh
  File "cassandra/metadata.py", line 165, in cassandra.metadata.Metadata._rebuild_all
  File "cassandra/metadata.py", line 2872, in get_all_keyspaces
  File "cassandra/metadata.py", line 2522, in get_all_keyspaces
  File "cassandra/metadata.py", line 2031, in get_all_keyspaces
  File "cassandra/metadata.py", line 2811, in cassandra.metadata.SchemaParserV4._query_all
  File "cassandra/connection.py", line 1073, in cassandra.connection.Connection.wait_for_responses
  File "cassandra/connection.py", line 1071, in cassandra.connection.Connection.wait_for_responses
  File "cassandra/connection.py", line 1572, in cassandra.connection.ResponseWaiter.deliver
cassandra.OperationTimedOut: errors=None, last_host=None
17:32:24,240 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.2:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3599, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 3596, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 3698, in cassandra.cluster.ControlConnection._refresh_schema
  File "cassandra/metadata.py", line 142, in cassandra.metadata.Metadata.refresh
  File "cassandra/metadata.py", line 165, in cassandra.metadata.Metadata._rebuild_all
  File "cassandra/metadata.py", line 2872, in get_all_keyspaces
  File "cassandra/metadata.py", line 2522, in get_all_keyspaces
  File "cassandra/metadata.py", line 2031, in get_all_keyspaces
  File "cassandra/metadata.py", line 2811, in cassandra.metadata.SchemaParserV4._query_all
  File "cassandra/connection.py", line 1073, in cassandra.connection.Connection.wait_for_responses
  File "cassandra/connection.py", line 1071, in cassandra.connection.Connection.wait_for_responses
  File "cassandra/connection.py", line 1572, in cassandra.connection.ResponseWaiter.deliver
cassandra.OperationTimedOut: errors=None, last_host=None
17:32:24,241 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.2:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3599, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 3596, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 3698, in cassandra.cluster.ControlConnection._refresh_schema
  File "cassandra/metadata.py", line 142, in cassandra.metadata.Metadata.refresh
  File "cassandra/metadata.py", line 165, in cassandra.metadata.Metadata._rebuild_all
  File "cassandra/metadata.py", line 2872, in get_all_keyspaces
  File "cassandra/metadata.py", line 2522, in get_all_keyspaces
  File "cassandra/metadata.py", line 2031, in get_all_keyspaces
  File "cassandra/metadata.py", line 2811, in cassandra.metadata.SchemaParserV4._query_all
  File "cassandra/connection.py", line 1073, in cassandra.connection.Connection.wait_for_responses
  File "cassandra/connection.py", line 1071, in cassandra.connection.Connection.wait_for_responses
  File "cassandra/connection.py", line 1572, in cassandra.connection.ResponseWaiter.deliver
cassandra.OperationTimedOut: errors=None, last_host=None
17:32:24,249 cassandra.cluster ERROR Control connection failed to connect, shutting down Cluster:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 1690, in cassandra.cluster.Cluster.connect
  File "cassandra/cluster.py", line 3488, in cassandra.cluster.ControlConnection.connect
  File "cassandra/cluster.py", line 3533, in cassandra.cluster.ControlConnection._reconnect_internal
cassandra.cluster.NoHostAvailable: ('Unable to connect to any servers', {'127.0.0.2:9042': OperationTimedOut('errors=None, last_host=None',)})
17:32:24,251 cassandra.cluster ERROR Control connection failed to connect, shutting down Cluster:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 1690, in cassandra.cluster.Cluster.connect
  File "cassandra/cluster.py", line 3488, in cassandra.cluster.ControlConnection.connect
  File "cassandra/cluster.py", line 3533, in cassandra.cluster.ControlConnection._reconnect_internal
cassandra.cluster.NoHostAvailable: ('Unable to connect to any servers', {'127.0.0.2:9042': OperationTimedOut('errors=None, last_host=None',)})
17:32:24,253 cassandra.cluster ERROR Control connection failed to connect, shutting down Cluster:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 1690, in cassandra.cluster.Cluster.connect
  File "cassandra/cluster.py", line 3488, in cassandra.cluster.ControlConnection.connect
  File "cassandra/cluster.py", line 3533, in cassandra.cluster.ControlConnection._reconnect_internal
cassandra.cluster.NoHostAvailable: ('Unable to connect to any servers', {'127.0.0.2:9042': OperationTimedOut('errors=None, last_host=None',)})
FAILED                                                                   [100%]
------------------------------ live log teardown -------------------------------
17:33:22,863 cassandra.cluster WARNING Host 127.0.0.1:9042 has been marked down
17:33:23,968 cassandra.pool WARNING Error attempting to reconnect to 127.0.0.1:9042, scheduling retry in 2.2 seconds: [Errno 111] Tried connecting to [('127.0.0.1', 9042)]. Last error: Connection refused
17:33:24,248 cassandra.cluster WARNING Host 127.0.0.2:9042 has been marked down
17:33:24,249 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.2:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 831, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 267, in __init__
    self._connect_socket()
  File "cassandra/connection.py", line 898, in cassandra.connection.Connection._connect_socket
ConnectionRefusedError: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused
17:33:25,83 cassandra.cluster WARNING Host 127.0.0.3:9042 has been marked down
17:33:25,273 cassandra.pool WARNING Error attempting to reconnect to 127.0.0.2:9042, scheduling retry in 1.72 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused


=================================== FAILURES ===================================
_ TestMaterializedViewsConsistency.test_multi_partition_consistent_reads_after_write _

self = <materialized_views_test.TestMaterializedViewsConsistency object at 0x7f3da097cdd8>

    def test_multi_partition_consistent_reads_after_write(self):
        """
            Tests consistency of multiple writes to a multiple partitions
    
            @jira_ticket CASSANDRA-10981
            """
>       self._consistent_reads_after_write_test(5)

materialized_views_test.py:2775: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
materialized_views_test.py:2852: in _consistent_reads_after_write_test
    mm = queues[i % processes].get(timeout=60)
/usr/lib/python3.6/multiprocessing/queues.py:108: in get
    res = self._recv_bytes()
/usr/lib/python3.6/multiprocessing/connection.py:212: in recv_bytes
    self._check_closed()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <multiprocessing.connection.Connection object at 0x7f3d67a96f60>

    def _check_closed(self):
        if self._handle is None:
>           raise OSError("handle is closed")
E           OSError: handle is closed

/usr/lib/python3.6/multiprocessing/connection.py:136: OSError
---------------------------- Captured stdout setup -----------------------------
17:31:03,88 ccm DEBUG Log-watching thread starting.
---------------------------- Captured stderr setup -----------------------------
swapoff: Not superuser.
------------------------------ Captured log setup ------------------------------
17:31:02,340 conftest INFO Starting execution of test_multi_partition_consistent_reads_after_write at 2022-01-30 17:31:02.340883
17:31:02,999 dtest_setup INFO cluster ccm directory: /tmp/dtest-hz71n8nc
----------------------------- Captured stdout call -----------------------------
('Unable to connect to any servers', {'127.0.0.2:9042': OperationTimedOut('errors=None, last_host=None',)})
------------------------------ Captured log call -------------------------------
17:31:04,370 ccm INFO node1: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-hz71n8nc/test/node1/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-hz71n8nc/test/node1/conf'}
17:31:04,370 ccm INFO node1: using Java 8 for the current invocation
17:31:04,551 ccm INFO node1: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-hz71n8nc/test/node1/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-hz71n8nc/test/node1/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6'}
17:31:04,552 ccm INFO node1: using Java 8 for the current invocation
17:31:04,639 ccm INFO Starting node1 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
17:31:04,900 ccm INFO node2: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-hz71n8nc/test/node2/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-hz71n8nc/test/node2/conf'}
17:31:04,901 ccm INFO node2: using Java 8 for the current invocation
17:31:05,67 ccm INFO node2: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-hz71n8nc/test/node2/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-hz71n8nc/test/node2/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6'}
17:31:05,68 ccm INFO node2: using Java 8 for the current invocation
17:31:05,148 ccm INFO Starting node2 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
17:31:05,396 ccm INFO node3: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-hz71n8nc/test/node3/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-hz71n8nc/test/node3/conf'}
17:31:05,396 ccm INFO node3: using Java 8 for the current invocation
17:31:05,568 ccm INFO node3: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-hz71n8nc/test/node3/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-hz71n8nc/test/node3/conf', 'CASSANDRA_LIBJEMALLOC': '-', 'JVM_EXTRA_OPTS': ' -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6 -Dcassandra.migration_task_wait_in_seconds=6'}
17:31:05,569 ccm INFO node3: using Java 8 for the current invocation
17:31:05,647 ccm INFO Starting node3 with JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 java_version=8 cassandra_version=4.0.2, install_dir=/root/cassandra
17:31:31,418 cassandra.cluster INFO New Cassandra host <Host: 127.0.0.3:9042 datacenter1> discovered
17:31:31,419 cassandra.cluster INFO New Cassandra host <Host: 127.0.0.1:9042 datacenter1> discovered
17:31:47,617 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
17:32:02,727 cassandra.cluster WARNING Node 127.0.0.2:9042 is reporting a schema disagreement: None
17:32:17,542 ccm INFO node1: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-hz71n8nc/test/node1/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-hz71n8nc/test/node1/conf'}
17:32:17,543 ccm INFO node1: using Java 8 for the current invocation
17:32:19,114 ccm INFO node2: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-hz71n8nc/test/node2/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-hz71n8nc/test/node2/conf'}
17:32:19,115 ccm INFO node2: using Java 8 for the current invocation
17:32:20,725 ccm INFO node3: current_java_version=8, current_java_home_version=8, jvm_version=None, for_build=False, cassandra_version=4.0.2, install_dir=/root/cassandra, env={'HOSTNAME': 'b1b81bf3bd0f', 'JAVA_HOME': '/usr/lib/jvm/java-1.8.0-openjdk-amd64', 'PWD': '/root/cassandra-dtest', 'HOME': '/root', 'SHLVL': '4', 'ZEBRACONF_HOME': '/root/vm_images/ZebraConf', 'PATH': '/root/dtest/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/root/dtest/bin/pytest', 'OLDPWD': '/', 'PYTEST_CURRENT_TEST': 'materialized_views_test.py::TestMaterializedViewsConsistency::()::test_multi_partition_consistent_reads_after_write (call)', 'CASSANDRA_INCLUDE': '/tmp/dtest-hz71n8nc/test/node3/bin/cassandra.in.sh', 'MAX_HEAP_SIZE': '500M', 'HEAP_NEWSIZE': '50M', 'CASSANDRA_HOME': '/root/cassandra', 'CASSANDRA_CONF': '/tmp/dtest-hz71n8nc/test/node3/conf'}
17:32:20,726 ccm INFO node3: using Java 8 for the current invocation
17:32:22,169 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:32:22,171 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:32:22,172 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:32:22,172 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:32:22,185 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:32:22,186 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:32:22,186 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:32:22,187 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:32:22,191 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:32:22,191 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:32:22,193 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:32:22,195 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:32:22,212 cassandra.policies INFO Using datacenter 'datacenter1' for DCAwareRoundRobinPolicy (via host '127.0.0.2:9042'); if incorrect, please specify a local_dc to the constructor, or limit contact points to local cluster nodes
17:32:22,213 cassandra.cluster INFO New Cassandra host <Host: 127.0.0.3:9042 datacenter1> discovered
17:32:22,213 cassandra.cluster INFO New Cassandra host <Host: 127.0.0.1:9042 datacenter1> discovered
17:32:22,216 cassandra.policies INFO Using datacenter 'datacenter1' for DCAwareRoundRobinPolicy (via host '127.0.0.2:9042'); if incorrect, please specify a local_dc to the constructor, or limit contact points to local cluster nodes
17:32:22,216 cassandra.cluster INFO New Cassandra host <Host: 127.0.0.3:9042 datacenter1> discovered
17:32:22,217 cassandra.cluster INFO New Cassandra host <Host: 127.0.0.1:9042 datacenter1> discovered
17:32:22,220 cassandra.policies INFO Using datacenter 'datacenter1' for DCAwareRoundRobinPolicy (via host '127.0.0.2:9042'); if incorrect, please specify a local_dc to the constructor, or limit contact points to local cluster nodes
17:32:22,220 cassandra.cluster INFO New Cassandra host <Host: 127.0.0.3:9042 datacenter1> discovered
17:32:22,221 cassandra.cluster INFO New Cassandra host <Host: 127.0.0.1:9042 datacenter1> discovered
17:32:22,222 cassandra.policies INFO Using datacenter 'datacenter1' for DCAwareRoundRobinPolicy (via host '127.0.0.2:9042'); if incorrect, please specify a local_dc to the constructor, or limit contact points to local cluster nodes
17:32:22,223 cassandra.cluster INFO New Cassandra host <Host: 127.0.0.3:9042 datacenter1> discovered
17:32:22,223 cassandra.cluster INFO New Cassandra host <Host: 127.0.0.1:9042 datacenter1> discovered
17:32:24,239 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.2:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3599, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 3596, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 3698, in cassandra.cluster.ControlConnection._refresh_schema
  File "cassandra/metadata.py", line 142, in cassandra.metadata.Metadata.refresh
  File "cassandra/metadata.py", line 165, in cassandra.metadata.Metadata._rebuild_all
  File "cassandra/metadata.py", line 2872, in get_all_keyspaces
  File "cassandra/metadata.py", line 2522, in get_all_keyspaces
  File "cassandra/metadata.py", line 2031, in get_all_keyspaces
  File "cassandra/metadata.py", line 2811, in cassandra.metadata.SchemaParserV4._query_all
  File "cassandra/connection.py", line 1073, in cassandra.connection.Connection.wait_for_responses
  File "cassandra/connection.py", line 1071, in cassandra.connection.Connection.wait_for_responses
  File "cassandra/connection.py", line 1572, in cassandra.connection.ResponseWaiter.deliver
cassandra.OperationTimedOut: errors=None, last_host=None
17:32:24,240 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.2:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3599, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 3596, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 3698, in cassandra.cluster.ControlConnection._refresh_schema
  File "cassandra/metadata.py", line 142, in cassandra.metadata.Metadata.refresh
  File "cassandra/metadata.py", line 165, in cassandra.metadata.Metadata._rebuild_all
  File "cassandra/metadata.py", line 2872, in get_all_keyspaces
  File "cassandra/metadata.py", line 2522, in get_all_keyspaces
  File "cassandra/metadata.py", line 2031, in get_all_keyspaces
  File "cassandra/metadata.py", line 2811, in cassandra.metadata.SchemaParserV4._query_all
  File "cassandra/connection.py", line 1073, in cassandra.connection.Connection.wait_for_responses
  File "cassandra/connection.py", line 1071, in cassandra.connection.Connection.wait_for_responses
  File "cassandra/connection.py", line 1572, in cassandra.connection.ResponseWaiter.deliver
cassandra.OperationTimedOut: errors=None, last_host=None
17:32:24,241 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.2:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3599, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 3596, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 3698, in cassandra.cluster.ControlConnection._refresh_schema
  File "cassandra/metadata.py", line 142, in cassandra.metadata.Metadata.refresh
  File "cassandra/metadata.py", line 165, in cassandra.metadata.Metadata._rebuild_all
  File "cassandra/metadata.py", line 2872, in get_all_keyspaces
  File "cassandra/metadata.py", line 2522, in get_all_keyspaces
  File "cassandra/metadata.py", line 2031, in get_all_keyspaces
  File "cassandra/metadata.py", line 2811, in cassandra.metadata.SchemaParserV4._query_all
  File "cassandra/connection.py", line 1073, in cassandra.connection.Connection.wait_for_responses
  File "cassandra/connection.py", line 1071, in cassandra.connection.Connection.wait_for_responses
  File "cassandra/connection.py", line 1572, in cassandra.connection.ResponseWaiter.deliver
cassandra.OperationTimedOut: errors=None, last_host=None
17:32:24,249 cassandra.cluster ERROR Control connection failed to connect, shutting down Cluster:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 1690, in cassandra.cluster.Cluster.connect
  File "cassandra/cluster.py", line 3488, in cassandra.cluster.ControlConnection.connect
  File "cassandra/cluster.py", line 3533, in cassandra.cluster.ControlConnection._reconnect_internal
cassandra.cluster.NoHostAvailable: ('Unable to connect to any servers', {'127.0.0.2:9042': OperationTimedOut('errors=None, last_host=None',)})
17:32:24,251 cassandra.cluster ERROR Control connection failed to connect, shutting down Cluster:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 1690, in cassandra.cluster.Cluster.connect
  File "cassandra/cluster.py", line 3488, in cassandra.cluster.ControlConnection.connect
  File "cassandra/cluster.py", line 3533, in cassandra.cluster.ControlConnection._reconnect_internal
cassandra.cluster.NoHostAvailable: ('Unable to connect to any servers', {'127.0.0.2:9042': OperationTimedOut('errors=None, last_host=None',)})
17:32:24,253 cassandra.cluster ERROR Control connection failed to connect, shutting down Cluster:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 1690, in cassandra.cluster.Cluster.connect
  File "cassandra/cluster.py", line 3488, in cassandra.cluster.ControlConnection.connect
  File "cassandra/cluster.py", line 3533, in cassandra.cluster.ControlConnection._reconnect_internal
cassandra.cluster.NoHostAvailable: ('Unable to connect to any servers', {'127.0.0.2:9042': OperationTimedOut('errors=None, last_host=None',)})
--------------------------- Captured stderr teardown ---------------------------
ng/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "/usr/lib/python3.6/multiprocessing/queues.py", line 240, in _feed
    send_bytes(obj)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/usr/lib/python3.6/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
---------------------------- Captured log teardown -----------------------------
17:33:22,863 cassandra.cluster WARNING Host 127.0.0.1:9042 has been marked down
17:33:23,968 cassandra.pool WARNING Error attempting to reconnect to 127.0.0.1:9042, scheduling retry in 2.2 seconds: [Errno 111] Tried connecting to [('127.0.0.1', 9042)]. Last error: Connection refused
17:33:24,248 cassandra.cluster WARNING Host 127.0.0.2:9042 has been marked down
17:33:24,249 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.2:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 831, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 267, in __init__
    self._connect_socket()
  File "cassandra/connection.py", line 898, in cassandra.connection.Connection._connect_socket
ConnectionRefusedError: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused
17:33:25,83 cassandra.cluster WARNING Host 127.0.0.3:9042 has been marked down
17:33:25,273 cassandra.pool WARNING Error attempting to reconnect to 127.0.0.2:9042, scheduling retry in 1.72 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write failed and was not selected for rerun.
	<class 'OSError'>
	handle is closed
	[<TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2775>, <TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2852>, <TracebackEntry /usr/lib/python3.6/multiprocessing/queues.py:108>, <TracebackEntry /usr/lib/python3.6/multiprocessing/connection.py:212>, <TracebackEntry /usr/lib/python3.6/multiprocessing/connection.py:136>]

===End Flaky Test Report===
========================== 1 failed in 143.45 seconds ==========================
[msx] rc = 1
v1v1 running time = 164954114625
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
17:34:27,15 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
17:34:51,674 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.1:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 840, in cassandra.connection.Connection.factory
cassandra.OperationTimedOut: errors=Timed out creating connection (15 seconds), last_host=None
17:35:04,499 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:35:04,501 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:35:04,502 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:35:04,504 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:35:04,515 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:35:04,516 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:35:04,516 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:35:04,517 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:35:04,521 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:35:04,523 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:35:04,524 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:35:04,526 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 260.54 seconds ==========================
[msx] rc = 0
v2v2 running time = 283854182303
---> v1v1 or v2v2 test failed.
v1v1 failed in a hypo test
proj: cassandra
u_test: materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
h_list: gc_warn_threshold_in_ms@@@CassandraDaemon@@@-2@@@100@@@1000
vv_mode: v1v1
result: FAIL
failureMessage: 
stackTrace: 

cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
17:39:13,430 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
17:39:51,556 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:39:51,557 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:39:51,558 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:39:51,560 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:39:51,576 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:39:51,577 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:39:51,577 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:39:51,578 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:39:51,583 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:39:51,584 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:39:51,585 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:39:51,587 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 273.10 seconds ==========================
[msx] rc = 0
v1v2 running time = 296291762315
---> v1v2 test suceeded.
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
17:44:13,928 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
17:44:52,211 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:44:52,212 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:44:52,213 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:44:52,214 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:44:52,227 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:44:52,227 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:44:52,228 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:44:52,228 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:44:52,232 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:44:52,232 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:44:52,234 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:44:52,236 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 272.99 seconds ==========================
[msx] rc = 0
v1v1 running time = 294419373620
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
17:48:59,852 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
17:49:22,258 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.1:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 840, in cassandra.connection.Connection.factory
cassandra.OperationTimedOut: errors=Timed out creating connection (15 seconds), last_host=None
17:49:34,412 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:49:34,413 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:49:34,414 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:49:34,415 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:49:34,430 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:49:34,431 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:49:34,431 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:49:34,431 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:49:34,436 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:49:34,436 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:49:34,438 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:49:34,440 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 261.84 seconds ==========================
[msx] rc = 0
v2v2 running time = 283306355856
---> v1v1 and v2v2 test test suceeded.
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
17:53:47,657 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
17:53:52,964 cassandra.cluster ERROR Exception refreshing schema in response to schema change:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 4206, in cassandra.cluster.refresh_schema_and_set_result
  File "cassandra/cluster.py", line 3686, in cassandra.cluster.ControlConnection._refresh_schema
  File "cassandra/cluster.py", line 3935, in cassandra.cluster.ControlConnection.wait_for_schema_agreement
  File "cassandra/cluster.py", line 3975, in cassandra.cluster.ControlConnection.wait_for_schema_agreement
  File "cassandra/cluster.py", line 3963, in cassandra.cluster.ControlConnection.wait_for_schema_agreement
  File "cassandra/connection.py", line 1041, in cassandra.connection.Connection.wait_for_responses
cassandra.connection.ConnectionShutdown: Connection <LibevConnection(139635221179192) 127.0.0.2:9042 (defunct)> is already closed
17:53:52,966 cassandra.cluster WARNING Host 127.0.0.2:9042 has been marked down
17:53:53,189 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.3:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 831, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 267, in __init__
    self._connect_socket()
  File "cassandra/connection.py", line 898, in cassandra.connection.Connection._connect_socket
ConnectionRefusedError: [Errno 111] Tried connecting to [('127.0.0.3', 9042)]. Last error: Connection refused
17:53:53,190 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.1:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 831, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 267, in __init__
    self._connect_socket()
  File "cassandra/connection.py", line 898, in cassandra.connection.Connection._connect_socket
ConnectionRefusedError: [Errno 111] Tried connecting to [('127.0.0.1', 9042)]. Last error: Connection refused
17:53:54,194 cassandra.pool WARNING Error attempting to reconnect to 127.0.0.2:9042, scheduling retry in 1.76 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused
17:53:54,294 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.1:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 831, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 267, in __init__
    self._connect_socket()
  File "cassandra/connection.py", line 898, in cassandra.connection.Connection._connect_socket
ConnectionRefusedError: [Errno 111] Tried connecting to [('127.0.0.1', 9042)]. Last error: Connection refused
17:53:54,295 cassandra.cluster WARNING [control connection] Error connecting to 127.0.0.3:9042:
Traceback (most recent call last):
  File "cassandra/cluster.py", line 3522, in cassandra.cluster.ControlConnection._reconnect_internal
  File "cassandra/cluster.py", line 3544, in cassandra.cluster.ControlConnection._try_connect
  File "cassandra/cluster.py", line 1620, in cassandra.cluster.Cluster.connection_factory
  File "cassandra/connection.py", line 831, in cassandra.connection.Connection.factory
  File "/root/dtest/src/cassandra-driver/cassandra/io/libevreactor.py", line 267, in __init__
    self._connect_socket()
  File "cassandra/connection.py", line 898, in cassandra.connection.Connection._connect_socket
ConnectionRefusedError: [Errno 111] Tried connecting to [('127.0.0.3', 9042)]. Last error: Connection refused
17:53:55,997 cassandra.pool WARNING Error attempting to reconnect to 127.0.0.2:9042, scheduling retry in 3.8 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused

-------------------------------- live log call ---------------------------------
17:54:42,74 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
17:55:20,0 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:55:20,2 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:55:20,3 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:55:20,3 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
17:55:20,18 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:55:20,18 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:55:20,18 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:55:20,19 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:55:20,21 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:55:20,24 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:55:20,25 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
17:55:20,26 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write failed (1 runs remaining out of 2).
	<class 'cassandra.OperationTimedOut'>
	errors={'Connection defunct by heartbeat': 'Client request timeout. See Session.execute[_async](timeout)'}, last_host=127.0.0.2:9042
	[<TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2775>, <TracebackEntry /root/cassandra-dtest/materialized_views_test.py:2808>, <TracebackEntry cassandra/cluster.py:2618>, <TracebackEntry cassandra/cluster.py:4894>]
test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 319.75 seconds ==========================
[msx] rc = 0
v1v2 running time = 342692252587
---> v1v2 test suceeded.
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
17:59:29,521 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
18:00:07,37 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
18:00:07,38 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
18:00:07,39 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
18:00:07,40 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
18:00:07,56 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
18:00:07,57 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
18:00:07,57 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
18:00:07,57 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
18:00:07,60 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
18:00:07,62 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
18:00:07,65 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
18:00:07,66 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 263.30 seconds ==========================
[msx] rc = 0
v1v1 running time = 284805413607
cassandra materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write false false
log_dst_dir = /root/vm_images/ZebraConf/app_meta/logs
the_test is materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /root/dtest/bin/python
cachedir: .pytest_cache
rootdir: /root/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 1200.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

materialized_views_test.py::TestMaterializedViewsConsistency::test_multi_partition_consistent_reads_after_write 
-------------------------------- live log call ---------------------------------
18:04:14,656 cassandra.protocol WARNING Server warning: Materialized views are experimental and are not recommended for production use.
18:04:49,618 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
18:04:49,620 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
18:04:49,621 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
18:04:49,622 cassandra.cluster WARNING Cluster.__init__ called with contact_points specified, but no load_balancing_policy. In the next major version, this will raise an error; please specify a load-balancing policy. (contact_points = ['127.0.0.2'], lbp = None)
18:04:49,639 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
18:04:49,639 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
18:04:49,640 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
18:04:49,640 cassandra.cluster WARNING Downgrading core protocol version from 66 to 65 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
18:04:49,644 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
18:04:49,645 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
18:04:49,646 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
18:04:49,650 cassandra.cluster WARNING Downgrading core protocol version from 65 to 5 for 127.0.0.2:9042. To avoid this, it is best practice to explicitly set Cluster(protocol_version) to the version supported by your cluster. http://datastax.github.io/python-driver/api/cassandra/cluster.html#cassandra.cluster.Cluster.protocol_version
PASSED                                                                   [100%]
===Flaky Test Report===

test_multi_partition_consistent_reads_after_write passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 266.27 seconds ==========================
[msx] rc = 0
v2v2 running time = 287692221564
---> v1v1 and v2v2 test test suceeded.
v1v2 failed with probability 4 out of 20
v1v1v2v2 failed with probability 3 out of 20
Total execution time in seconds : 16571
0
