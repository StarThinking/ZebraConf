cassandra batch_test.py::TestBatch::test_logged_batch_gcgs_below_threshold_single_table true true
the_test is batch_test.py::TestBatch::test_logged_batch_gcgs_below_threshold_single_table
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /users/masix/dtest/bin/python
cachedir: .pytest_cache
rootdir: /users/masix/cassandra-dtest, inifile: pytest.ini
plugins: timeout-1.4.2, repeat-0.9.1, flaky-3.7.0
timeout: 900.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

batch_test.py::TestBatch::test_logged_batch_gcgs_below_threshold_single_table 
-------------------------------- live log call ---------------------------------
19:50:07,793 ccmlib.node WARNING [msx] ccmlib:copy_config_files.py, conf_dir = /users/masix/cassandra/conf
19:50:07,879 ccmlib.node WARNING [msx] ccmlib:node.py, self.name = node1
19:50:07,879 ccmlib.node WARNING [msx] ccmlib:node.py, sstable_preemptive_open_interval_in_mb = 50
19:50:07,947 ccmlib.node WARNING [msx] ccmlib:node.py, self.name = node1
19:50:07,948 ccmlib.node WARNING [msx] ccmlib:node.py, sstable_preemptive_open_interval_in_mb = 50
19:50:14,836 cassandra.protocol WARNING Server warning: Executing a LOGGED BATCH on table [ks.users], configured with a gc_grace_seconds of 0. The gc_grace_seconds is used to TTL batchlog entries, so setting gc_grace_seconds too low on tables involved in an atomic batch might cause batchlog entries to expire before being replayed.
PASSED                                                                   [100%]
===Flaky Test Report===

test_logged_batch_gcgs_below_threshold_single_table passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

=========================== 1 passed in 8.03 seconds ===========================
[msx] rc = 0
