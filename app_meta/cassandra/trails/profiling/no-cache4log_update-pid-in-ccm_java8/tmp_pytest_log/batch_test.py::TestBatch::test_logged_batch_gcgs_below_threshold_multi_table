cassandra batch_test.py::TestBatch::test_logged_batch_gcgs_below_threshold_multi_table true true
log_dts_dir = /users/masix/vm_images/ZebraConf/app_meta/logs
the_test is batch_test.py::TestBatch::test_logged_batch_gcgs_below_threshold_multi_table
rm: cannot remove '/tmp/my_log.txt': No such file or directory
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.6.4, py-1.11.0, pluggy-0.7.1 -- /users/masix/dtest/bin/python
cachedir: .pytest_cache
rootdir: /users/masix/cassandra-dtest, inifile: pytest.ini
plugins: flaky-3.7.0, timeout-1.4.2, repeat-0.9.1
timeout: 900.0s
timeout method: signal
timeout func_only: False
collecting ... collected 1 item

batch_test.py::TestBatch::test_logged_batch_gcgs_below_threshold_multi_table 
-------------------------------- live log call ---------------------------------
19:17:50,983 ccmlib.node WARNING [msx] ccmlib:node.py:start(), self.name= node1, self.pid= 32100
19:17:50,985 ccmlib.cluster WARNING [msx] ccmlib:cluster.py:start() p.pid= 32004 node.name= node1 node.pid= 32100
19:18:02,589 cassandra.protocol WARNING Server warning: Executing a LOGGED BATCH on tables [ks.views, ks.users], configured with a gc_grace_seconds of 0. The gc_grace_seconds is used to TTL batchlog entries, so setting gc_grace_seconds too low on tables involved in an atomic batch might cause batchlog entries to expire before being replayed.
PASSED                                                                   [100%]
===Flaky Test Report===

test_logged_batch_gcgs_below_threshold_multi_table passed 1 out of the required 1 times. Success!

===End Flaky Test Report===

========================== 1 passed in 13.48 seconds ===========================
[msx] rc = 0
